{"version":3,"sources":["components/modal-overlay/modal-overlay.module.css","components/order-details/order-details.module.css","components/ingredient-in-constructor/ingredient-in-constructor.module.css","pages/main-page/main-page.module.css","components/orders-list/orders-list.module.css","components/feed-list/feed-list.module.css","pages/feed/feed.module.css","pages/profile-user-data/profile-user-data.module.css","components/burger-constructor/burger-constructor.module.css","components/app-header/app-header.module.css","images/logo.svg","images/mobile_menu_opener.svg","components/app-header/app-header.tsx","utils/utils.js","utils/http.js","models/ingredient-model.ts","utils/api.tsx","utils/apiURLs.js","services/slices/ingredients/ingredients.tsx","services/actions/burger-constructor.tsx","services/actions/ingredient-dragging.tsx","utils/hooks.ts","components/ingredient/ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","components/modal-overlay/modal-overlay.tsx","components/modal-window/modal.tsx","images/order_placed.svg","services/actions/order.tsx","components/order-details/order-details.tsx","components/ingredient-in-constructor/ingredient-in-constructor.tsx","components/burger-constructor/burger-constructor.tsx","pages/main-page/main-page.tsx","pages/not-found404/not-found404.tsx","services/slices/login/login.tsx","utils/initial-states.ts","services/slices/auth/auth.tsx","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/order-status-title/order-status-title.tsx","components/order-in-list/order-in-list.tsx","components/orders-list/orders-list.tsx","components/feed-list/feed-list.tsx","components/feed-summary/feed-summary.tsx","services/slices/feed/feed.tsx","pages/feed/feed.tsx","components/ingredient-with-amount-for-feed/ingredient-with-amount-for-feed.tsx","pages/order-detailed-page/order-detailed-page.tsx","pages/profile-main-page/profile-main-page.tsx","pages/profile-user-data/profile-user-data.tsx","pages/profile-orders-history/profile-orders-history.tsx","components/ProtectedRoute.tsx","components/OnlyUnauthRoute.tsx","services/actions/ingredient-detail.tsx","services/reducers/ingredient-detail/ingredient-detail.tsx","pages/ingredient-detailed/ingredient-details.tsx","components/clear-history-state/clear-history-state.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/burger-constructor/burger-constructor.tsx","services/reducers/order/order.tsx","services/reducers/ingredient-dragging/ingredient-dragging.tsx","services/reducers/index.tsx","services/store.ts","services/middlewares/socketMiddleware.ts","index.tsx","pages/login/login.module.css","components/ingredient/ingredient.module.css","components/order-in-list/order-in-list.module.css","pages/order-detailed-page/order-detailed-page.module.css","components/feed-summary/feed-summary.module.css","components/ingredient-with-amount-for-feed/ingredient-with-amount-for-feed.module.css","pages/profile-main-page/profile.module.css","pages/ingredient-detailed/modal-detailed.module.css","components/modal-window/modal.module.css"],"names":["module","exports","AppHeader","className","headerStyles","container","desktop_header","join","menu_desktop","menu_item","data-testid","exact","to","activeClassName","type","mobile_header","src","LogoSmall","alt","MobileMenuOpener","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","saveToLocalStorage","localStorage","setItem","getFromLocalStorage","getItem","removeFromLocalStorage","removeItem","getTokenFromPayload","payload","indexOf","split","dateToFromNowDaily","myDate","fromNow","moment","locale","calendar","lastWeek","lastDay","sameDay","nextDay","nextWeek","sameElse","isRefreshing","refreshSubscribers","http","axios","create","defaults","headers","common","Authorization","interceptors","response","use","error","config","status","originalRequest","refreshTokenRequest","then","resp","json","data","success","Error","message","token","accessToken","refreshToken","onRrefreshed","catch","err","toast","history","Promise","resolve","subscribeTokenRefresh","reject","EIngredientTypes","cb","push","map","registerRequest","user","a","fetch","method","mode","cache","credentials","redirect","referrerPolicy","body","JSON","stringify","loginRequest","getUserRequest","get","res","placeOrderRequest","dataToPost","post","logoutRequest","passwordResetRequest","email","doPasswordResetRequest","password","updateUserRequest","patch","getIngredientsRequest","ingredientsSlice","createSlice","initialState","ingredients","isFetching","isErrorWhileFetching","reducers","ingredientsFetched","state","action","ingredientsAreFetching","ingredientsFetchError","ingredientsSliceReducer","reducer","ADD_INGREDIENT_TO_CONSTRUCTOR","REMOVE_INGREDIENT_FROM_CONSTRUCTOR","WRAP_INGREDIENTS_IN_CONSTRUCTOR","CLEAR_CONSTRUCTOR","SET_INGREDIENT_DRAGGING","CLEAR_INGREDIENT_DRAGGING","useSelector","selectorHook","useDispatch","dispatchHook","Ingredient","ingredient","burgerConstructor","dispatcher","useDrag","item","collect","monitor","opacity","isDragging","dragRef","useEffect","amount","reduce","accumulator","currentValue","_id","location","useLocation","useHistory","ref","style","styles","ingredient_container","image_mobile","onClick","pathname","from","price","count","size","DetailPopup","BurgerIngredients","useState","Bun","currentIngredientType","setCurrentIngredientType","ingredientsTypes","headerRef","useRef","offsetTop","Sause","Main","ingredsContainer","handleScroll","event","target","scrollTop","closest","forEach","it","current","parentElement","Math","abs","scrollableElement","addEventListener","removeEventListener","setCurrentTab","cur","find","ingT","currentElement","scrollIntoView","behavior","block","ingredients_list_container","display","ingredientsType","active","ingredients_panel","Fragment","ingredients_panel_title","filter","ing","ModalOverlay","onCloseClick","Backdrop","modalRoot","getElementById","Modal","title","show","children","close","e","key","window","ReactDOM","createPortal","ModalWindow","stopPropagation","TitleAndClose","ORDER_IS_PROCESSING","ORDER_COMPLETED","ORDER_PROCESS_FAILED","OrderDetails","chosenIngredients","length","dispatch","order","number","placeOrder","Container","OrderPlacedImage","fontSize","color","height","width","IngredientInConstructor","SortableElement","constructor_element_container","thumbnail","text","handleClose","BurgerConstructor","orderCompleted","setOrderCompleted","finalPrice","draggingIngredient","auth","useDrop","accept","drop","isHover","isOver","dropTarget","chosenBun","SortableList","SortableContainer","items","index","chosenInnerIngredients","useMemo","i","onDrop","preventDefault","fake_ingredient","on_drag_ready","isLocked","ingredients_scrollable_container","scrollbar_appeared","onSortEnd","oldIndex","newIndex","indexesOfTransferedElement","distance","final_price","warn","empty_dropzone","drop_sign","MainPage","DndProvider","backend","HTML5Backend","NotFound404","paddingTop","alignItems","flexDirection","placeholder","isError","icon","verification_code","isDataTransfering","isDataTransferingCompleted","isErrorWhileDataTransfer","loginSlice","changeEmailFieldValue","changePaswordFieldValue","changeNameFieldValue","changeCodeFieldValue","changeEmailFieldError","errorText","changePaswordFieldError","changeNameFieldError","changeCodeFieldError","changePaswordFieldIcon","dataTransferCompletedSuccessfully","switchOffDataTransferStatus","errorWhileDataTransfer","actions","loginSliceReducer","getUser","getState","authSlice","userFetched","userStartFetching","isUserFetching","registerCompleted","loginSuccessfullyCompleted","userUpdateSuccessfullyCompleted","loggedOut","tokenRefreshed","userCompletedFetchingWithError","authSliceReducer","LoginPage","login","onSubmit","validator","isEmail","isEmpty","customLocation","loginUser","onChange","onIconClick","RegisterPage","registerUser","ForgotPasswordPage","ResetPasswordPage","OrderStatusTitle","OrderInList","useRouteMatch","totalPrice","b","url","order_number_date","createdAt","ingredient_and_price_container","ingredient_image","position","top","left","OrdersList","orders","FeedList","feed","isFetchingFeed","isErrorWhileFetchingFeed","FeedSummary","total","totalToday","ordersReady","ordersNotReady","orders_numbers","orders_numbers_column","orders_ready","isFetchingOrder","isErrorWhileFetchingOrder","feedSlice","feedFetched","feedSocketInit","feedSocketClose","myFeedSocketInit","feedFetchError","orderFetched","orderIsFetching","orderFetchError","feedSliceReducer","Feed","IngredientWithAmountForFeed","ingredientWithAmount","image_name","amount_price","OrderDetailedPage","order_id","useParams","result","findIndex","ingrWA","allIngredients","path","id","feedOrders","fo","LoaderOrError","inner","ingredients_list","date_price","ProfileMainPage","links","profile_inner_container","ProfileUserData","cancelInput","useCallback","updateUser","cancel_submit","ProfileOrdersHistory","ProtectedRoute","rest","isUserLoaded","setUserLoaded","init","render","OnlyUnauthRoute","SET_INGREDIENT_AS_PREVIEW","CLEAR_INGREDIENT_PREVIEW","IngredientDetails","detailedIngredient","ingredientsAll","getIngredientById","image_large","textAlign","description","NumbersContainer","calories","proteins","fat","carbohydrates","ClearHistoryStateComponent","createBrowserHistory","App","goBack","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","calculateFinalPrice","acc","updatedAt","rootReducer","combineReducers","newIngredients","bun","cutOut","splice","store","configureStore","middleware","pingInterval","feedSocket","next","WebSocket","onmessage","parsedData","parse","restParsedData","serializedOrders","sort","ord","ai","toString","onopen","setInterval","readyState","send","onclose","clearInterval","getDefaultMiddleware","devTools","process"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,SAAW,kC,oBCA7BD,EAAOC,QAAU,CAAC,UAAY,mC,oBCA9BD,EAAOC,QAAU,CAAC,8BAAgC,iEAAiE,oBAAsB,uDAAuD,0BAA4B,6DAA6D,iBAAmB,oDAAoD,wBAA0B,6D,oBCA1XD,EAAOC,QAAU,CAAC,UAAY,+B,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,iC,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,+B,oBCA9BD,EAAOC,QAAU,CAAC,eAAiB,6BAA6B,UAAY,wBAAwB,MAAQ,sB,oBCA5GD,EAAOC,QAAU,CAAC,oBAAsB,+CAA+C,iBAAmB,4CAA4C,mBAAqB,8CAA8C,cAAgB,2C,mBCAzOD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,YAAc,wCAAwC,iCAAmC,6DAA6D,cAAgB,0CAA0C,cAAgB,0CAA0C,mBAAqB,+CAA+C,eAAiB,2CAA2C,gBAAkB,4CAA4C,UAAY,wC,mBCAxhBD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,eAAiB,mCAAmC,cAAgB,kCAAkC,aAAe,iCAAiC,UAAY,gC,2ICD/M,MAA0B,iCCA1B,MAA0B,+C,OCgF1BC,EApEa,WAC1B,OACE,mCACE,sBACEC,UAAW,CACTC,IAAaC,UACbD,IAAaE,eACb,+BACAC,KAAK,KALT,UAOE,qBAAIJ,UAAWC,IAAaI,aAA5B,UACE,oBAAIL,UAAWC,IAAaK,UAA5B,SACE,eAAC,IAAD,CACEC,cAAY,mBACZC,OAAK,EACLC,GAAG,IACHT,UAAU,uDACVU,gBAAgB,oBALlB,UAOE,cAAC,aAAD,CAAYC,KAAK,YACjB,sBAAMX,UAAU,OAAhB,qFAGJ,oBAAIA,UAAWC,IAAaK,UAA5B,SACE,eAAC,IAAD,CACEC,cAAY,YACZE,GAAG,QACHT,UAAU,uDACVU,gBAAgB,oBAJlB,UAME,cAAC,WAAD,CAAUC,KAAK,YACf,sBAAMX,UAAU,OAAhB,+FAKN,cAAC,IAAD,CAASS,GAAG,IAAZ,SACE,cAAC,OAAD,MAGF,oBAAIT,UAAWC,IAAaI,aAA5B,SACE,oBAAIL,UAAWC,IAAaK,UAA5B,SACE,eAAC,IAAD,CACEC,cAAY,eACZE,GAAG,WACHT,UAAU,uDACVU,gBAAgB,oBAJlB,UAME,cAAC,cAAD,CAAaC,KAAK,YAClB,sBAAMX,UAAU,OAAhB,uGAKR,sBACEA,UAAW,CACTC,IAAaC,UACbD,IAAaW,cACb,uDACAR,KAAK,KALT,UAOE,qBAAKS,IAAKC,EAAWC,IAAI,KACzB,qBAAKF,IAAKG,EAAkBD,IAAI,Y,yECvEjC,SAASE,EAAUC,GACxB,IAAMC,EAAUC,SAASC,OAAOC,MAE9B,IAAIC,OAAO,WAAaL,EAAKM,QAAQ,+BAAgC,QAAU,aAEjF,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,EAG7C,SAASC,EAAUT,EAAMU,EAAOC,GAErC,IAAIC,GADJD,EAAQA,GAAS,IACDE,QAChB,GAAkB,iBAAPD,GAAmBA,EAAK,CACjC,IAAME,EAAI,IAAIC,KACdD,EAAEE,QAAQF,EAAEG,UAAkB,IAANL,GACxBA,EAAMD,EAAME,QAAUC,EAEpBF,GAAOA,EAAIM,cACbP,EAAME,QAAUD,EAAIM,eAGtB,IAAIC,EAAgBnB,EAAO,KAD3BU,EAAQU,mBAAmBV,IAE3B,IAAK,IAAMW,KAAYV,EAAO,CAC5BQ,GAAiB,KAAOE,EACxB,IAAMC,EAAYX,EAAMU,IACN,IAAdC,IACFH,GAAiB,IAAMG,GAG3BH,GAAiB,YACjBjB,SAASC,OAASgB,EAGb,SAASI,EAAavB,GAC3BS,EAAUT,EAAM,KAAM,CAAEa,SAAU,IAG7B,SAASW,EAAmBxB,EAAMU,GACvCe,aAAaC,QAAQ1B,EAAMU,GAGtB,SAASiB,EAAoB3B,GAClC,OAAOyB,aAAaG,QAAQ5B,GAGvB,SAAS6B,EAAuB7B,GACrCyB,aAAaK,WAAW9B,GAGnB,IAAM+B,EAAsB,SAACC,GAClC,OAAOA,GAAyC,IAA9BA,EAAQC,QAAQ,UAAkBD,EAAQE,MAAM,WAAW,GAAKF,GAGvEG,EAAqB,SAACC,GACjC,IAAIC,EAAUC,IAAOF,GAAQC,UAE7B,OADYC,IAAOF,GACRG,OAAO,MAAMC,SAAS,KAAM,CACrCC,SAAU,0DACVC,QAAS,yCACTC,QAAS,qDACTC,QAAS,+CACTC,SAAU,aACVC,SAAU,WACR,MAAO,IAAMT,EAAU,Q,iBCpDzBU,GAAe,EACfC,EAAqB,GAEnBC,EAAOC,IAAMC,SACnBF,EAAKG,SAASC,QAAQC,OAAS,CAAEC,cAAc,UAAD,OAAYxD,EAAU,iBAEpEkD,EAAKO,aAAaC,SAASC,KACzB,SAACD,GACC,OAAOA,KAET,SAACE,GACC,IACEC,EAEED,EAFFC,OACYC,EACVF,EADFF,SAAYI,OAERC,EAAkBF,EAExB,OAAe,MAAXC,GAA6B,MAAXA,GACfd,IACHA,GAAe,EACfgB,IACGC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MACRF,EAAKG,QAAUH,EAAKG,QAAU,wLAGlC,IAAMC,EAAQxC,EAAoBoC,EAAKK,aACvC/D,EAAU,cAAe8D,GACzB/C,EAAmB,eAAgB2C,EAAKM,cACxC1B,GAAe,EACf2B,EAAaH,MAEdI,OAAM,SAACC,GACNC,IAAMlB,MAAMiB,EAAIN,SAChBzC,EAAuB,gBACvBN,EAAa,eACbuD,GAAQxE,QAAQ,cAIf,IAAIyE,SAAQ,SAACC,GAClBC,GAAsB,SAACV,GACrBT,EAAgBT,QAAhB,cAA2C,UAAYkB,EACvDS,EAAQ9B,IAAMY,WAIXiB,QAAQG,OAAOvB,MAK5B,ICnDYwB,EDmDNF,EAAwB,SAACG,GAC7BpC,EAAmBqC,KAAKD,IAGpBV,EAAe,SAACH,GACpBvB,EAAmBsC,KAAI,SAACF,GAAD,OAAQA,EAAGb,OAGrBtB,IE3DFsC,EAAe,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEAChBC,MCfiB,sDDeO,CACnCC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbzC,QAAS,CACP,eAAgB,oBAElB0C,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUX,KAXM,mFAAH,sDAefY,EAAY,uCAAG,WAAOZ,GAAP,SAAAC,EAAA,sEACbC,MC7BgB,mDD6BO,CAClCC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbzC,QAAS,CACP,eAAgB,oBAElB0C,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUX,KAXG,mFAAH,sDAeZa,EAAc,uCAAG,sBAAAZ,EAAA,sEAAkBxC,EAAKqD,ICxCxB,mDDwC2CtC,MAAK,SAACuC,GAAD,OAASA,EAAIpC,QAA5D,mFAAH,qDACdqC,EAAiB,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,sEACzBxC,EAAKyD,KC/Cc,+CD+CID,GAAYzC,MAAK,SAACuC,GAAD,OAASA,EAAIpC,QAD5B,mFAAH,sDAGjBwC,EAAa,uCAAG,sBAAAlB,EAAA,sEACdC,MC/CiB,oDD+CO,CACnCC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbzC,QAAS,CACP,eAAgB,oBAElB0C,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CAAE5B,MAAO5C,EAAoB,oBAXzB,mFAAH,qDAeboC,EAAmB,uCAAG,sBAAA0B,EAAA,sEACpBC,MC7DmB,mDD6DO,CACrCC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbzC,QAAS,CACP,eAAgB,oBAElB0C,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CAAE5B,MAAO5C,EAAoB,oBAXnB,mFAAH,qDAenBiF,EAAoB,uCAAG,WAAOC,GAAP,SAAApB,EAAA,sEACrBC,MCzE2B,uDDyEO,CAC7CC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbzC,QAAS,CACP,eAAgB,oBAElB0C,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnBU,MAAOA,MAZuB,mFAAH,sDAiBpBC,EAAsB,uCAAG,WAAOC,EAAkBxC,GAAzB,SAAAkB,EAAA,sEACvBC,MCzFoB,6DDyFO,CACtCC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbzC,QAAS,CACP,eAAgB,oBAElB0C,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnBY,WACAxC,YAbgC,mFAAH,wDAkBtByC,EAAiB,uCAAG,WAAOxB,GAAP,SAAAC,EAAA,sEACzBxC,EAAKgE,MC7GmB,kDD6GKf,KAAKC,UAAUX,IAAOxB,MAAK,SAACuC,GAAD,OAASA,EAAIpC,QAD5C,mFAAH,sDAGjB+C,EAAqB,uCAAG,sBAAAzB,EAAA,sEAC7BC,MCvHyB,oDDuHA,CAC7BC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbzC,QAAS,CACP,eAAgB,oBAElB0C,SAAU,SACVC,eAAgB,gBAViB,mFAAH,qDEjFrBmB,EAAmBC,YAAY,CAC1CpH,KAAM,cACNqH,aA9BiD,CACjDC,YAAa,GACbC,YAAY,EACZC,sBAAsB,GA4BtBC,SAAU,CACRC,mBADQ,SAENC,EACAC,GAEAD,EAAMJ,YAAa,EACnBI,EAAMH,sBAAuB,EAC7BG,EAAML,YAAcM,EAAO5F,SAE7B6F,uBATQ,SASeF,GACrBA,EAAMJ,YAAa,EACnBI,EAAMH,sBAAuB,GAE/BM,sBAbQ,SAacH,GACpBA,EAAMJ,YAAa,EACnBI,EAAMH,sBAAuB,EAC7BG,EAAML,YAAc,OAKbS,EAA0BZ,EAAiBa,Q,kBH7C5C7C,K,UAAAA,E,cAAAA,E,aAAAA,M,8CIhBC8C,GACX,gCACWC,GACX,qCACWC,GACX,kCACWC,GAAyC,oBCNzCC,GAAqD,0BACrDC,GAAyD,4B,SCgCzDC,GAAgDC,KAEhDC,GAAc,kBAAMC,gBC2ClBC,GA5DI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,WACdtB,EAAciB,IAAY,SAACZ,GAAD,OAAuBA,EAAMkB,kBAAkBvB,eACzEwB,EAAaL,KAEnB,EAA2CM,aAAQ,CACjDtJ,KAAM,cACNuJ,KAAMJ,EACNK,QAAS,SAACC,GAAD,MAAc,CACrBC,QAASD,EAAQE,aAAe,GAAM,EACtCA,WAAYF,EAAQE,iBALxB,0BAASD,EAAT,EAASA,QAASC,EAAlB,EAAkBA,WAAcC,EAAhC,KASAC,qBAAU,WACRR,EAAW,CACTrJ,KAAM2J,EAAaf,GAA0BC,GAC7CM,WAAYA,MAEb,CAACQ,EAAYR,EAAYE,IAE5B,IAIMS,EAAS,WACb,OAAOjC,EAAYkC,QAAO,SAACC,EAAaC,GACtC,OAAOA,EAAaC,MAAQf,EAAWe,IAAMF,EAAc,EAAIA,IAC9D,IAGCG,EAAWC,cACX/E,EAAUgF,cAEhB,OACE,sBACEC,IAAKV,EACLW,MAAO,CAAEb,WACTrK,UAAW,CAACmL,KAAOC,qBAAsB,oCAAoChL,KAAK,KAHpF,UAKE,qBACES,IAAKiJ,EAAWuB,aAChBtK,IAAI,GACJuK,QAAS,kBACPtF,EAAQO,KAAK,CAAEgF,SAAS,gBAAD,OAAkBzB,EAAWe,KAAOhC,MAAO,CAAE2C,KAAMV,QAG9E,sBAAK9K,UAAW,CAACmL,KAAOM,MAAO,iCAAiCrL,KAAK,KAArE,UACE,sBAAMJ,UAAU,OAAhB,SAAwB8J,EAAW2B,QACnC,cAAC,eAAD,CAAc9K,KAAK,eAErB,mBAAGX,UAAU,QAAb,SAAsB8J,EAAW5I,OAChCuJ,IAAW,GAAK,cAAC,UAAD,CAASiB,MAAOjB,IAAUkB,KAAK,UAEhD,qBAAK3L,UAAWmL,KAAOS,YAAaN,QAjCjB,WACrBtB,EAAW,CAAErJ,KAAMwI,GAA+BW,WAAW,eAAMA,MAgCjE,SACE,cAAC,gBAAD,CAAenJ,KAAK,kBC+DbkL,GA/HqB,WAClC,MAA0DpC,cACxD,SAACZ,GAAD,OAAuBA,EAAML,eADvBA,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,WAAYC,EAAjC,EAAiCA,qBAIjC,EAA0DoD,mBAAiBzF,EAAiB0F,KAA5F,mBAAOC,EAAP,KAA8BC,EAA9B,KAEIC,EAAmB,CACrB,CACEvL,KAAM0F,EAAiB0F,IACvB7K,KAAM,iCACNiL,UAAWC,iBAAuB,MAClCC,UAAW,KAEb,CACE1L,KAAM0F,EAAiBiG,MACvBpL,KAAM,iCACNiL,UAAWC,iBAAuB,MAClCC,UAAW,KAEb,CACE1L,KAAM0F,EAAiBkG,KACvBrL,KAAM,6CACNiL,UAAWC,iBAAuB,MAClCC,UAAW,MAITG,EAAmBJ,iBAAuB,MAEhD5B,qBAAU,WACR,IAAMiC,EAAe,SAACC,GACpB,IAAQC,EAAWD,EAAXC,OACR,GAAIA,EAAQ,CACV,IAAMC,EAAaD,EAA0BC,UAEvCC,EAAU,CACdlM,KAAMuL,EAAiB,GAAGvL,KAC1B0L,UAAWH,EAAiB,GAAGG,WAEjCH,EAAiBY,SAAQ,SAACC,GACxB,GAAIA,EAAGZ,UAAUa,SAAWD,EAAGZ,UAAUa,QAAQC,cAAe,CAC9D,IAAMZ,EAAYa,KAAKC,IACrBJ,EAAGZ,UAAUa,QAAQX,UACnBU,EAAGZ,UAAUa,QAAQC,cAAcZ,UACnCO,GAEAP,GAAaQ,EAAQR,YACvBQ,EAAQlM,KAAOoM,EAAGpM,KAClBkM,EAAQR,UAAYA,OAI1BJ,EAAyBY,EAAQlM,QAI/ByM,EAAoBZ,EAAiBQ,QAI3C,OAHII,GACFA,EAAkBC,iBAAiB,SAAUZ,GAExC,WACDW,GACFA,EAAkBE,oBAAoB,SAAUb,OAKtD,IAAMc,EAAgB,SAACC,GACrBvB,EAAyBuB,GAEzB,IAAMT,EAAKb,EAAiBuB,MAAK,SAACC,GAAD,OAAUA,EAAK/M,OAAS6M,KACzD,GAAIT,EAAI,CACN,IACMY,EADiCZ,EAAGZ,UACKa,QAC3CW,GACFA,EAAeC,eAAe,CAC5BC,SAAU,SACVC,MAAO,YAMf,OAAOrF,EACL,4CACEC,EACF,sDAEA,0BAAS1I,UAAWmL,KAAO4C,2BAA3B,UACE,qBAAK/N,UAAU,sCAAf,mGACA,qBAAKkL,MAAO,CAAE8C,QAAS,QAAvB,SACG9B,EAAiB1F,KAAI,SAACyH,GAAD,OACpB,cAAC,MAAD,CAEErM,MAAOqM,EAAgBtN,KACvBuN,OAAQlC,IAA0BiC,EAAgBtN,KAClD2K,QAASiC,EAJX,SAMGU,EAAgB/M,MALZ+M,EAAgBtN,WAS3B,qBAAKX,UAAWmL,KAAOgD,kBAAmBlD,IAAKuB,EAA/C,SACGN,EAAiB1F,KAAI,SAACyH,GAAD,OACpB,eAAC,IAAMG,SAAP,WACE,qBACEnD,IAAKgD,EAAgB9B,UACrBnM,UAAW,CACTmL,KAAOkD,wBACP,uCACAjO,KAAK,KALT,SAOG6N,EAAgB/M,OAElBsH,EACE8F,QAAO,SAACC,GAAD,OAASA,EAAI5N,OAASsN,EAAgBtN,QAC7C6F,KAAI,SAAC+H,GAAD,OACH,cAAC,GAAD,CAA0BzE,WAAYyE,GAArBA,EAAI1D,UAbNoD,EAAgBtN,e,6DC1GhC6N,GAJM,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,aACtB,OAAO,qBAAKzO,UAAWmL,KAAOuD,SAAUpD,QAASmD,KCE7CE,GAAYvN,SAASwN,eAAe,oBAiD3BC,GA/CD,SAAC,GAUR,IATLC,EASI,EATJA,MACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,SACAP,EAMI,EANJA,aAiBA,GAVAjE,qBAAU,WACR,IAAMyE,EAAQ,SAACC,GACC,WAAVA,EAAEC,KACJV,KAIJ,OADAW,OAAO/B,iBAAiB,UAAW4B,GAC5B,kBAAMG,OAAO9B,oBAAoB,UAAW2B,MAClD,CAACR,KAECM,EACH,OAAO,KAOT,OAAOM,IAASC,aACd,qCACE,sBACEtP,UAAW,CAACmL,KAAOoE,YAAa,+BAA+BnP,KAAK,KACpEkL,QARU,SAAC4D,GACfA,EAAEM,mBAKA,UAIE,sBAAKxP,UAAWmL,KAAOsE,cAAvB,UACE,sBAAMzP,UAAU,6BAAhB,SAA8C8O,IAC9C,cAAC,YAAD,CAAWnO,KAAK,UAAU2K,QAASmD,OAEpCO,KAEH,cAAC,GAAD,CAAcP,aAAcA,OAE9BE,K,qBCnDW,OAA0B,yCCK5Be,GAA6C,sBAC7CC,GAAqC,kBACrCC,GAA+C,uB,qBCuC7CC,GAtCgB,WAC7B,IAAM7F,EAAaL,KACbmG,EAAoBrG,IAAY,SAACZ,GAAD,OAAuBA,EAAMkB,kBAAkBvB,eAErFgC,qBAAU,WACJsF,EAAkBC,QACpB/F,EDLoB,SAAC8F,GAAD,OAA2C,SAACE,GACpE,IAAMrI,EAAa,CACjBa,YAAasH,EAAkBtJ,KAAI,SAACsD,GAAD,OAAgBA,EAAWe,QAOhE,OAJAmF,EAAS,CACPrP,KAAM+O,KAGDhI,EAAkBC,GACtBzC,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MAAM,oIAElByK,EAAS,CACPrP,KAAMgP,GACNM,MAAO,CACL/O,KAAMmE,EAAKnE,KACXgP,OAAQ7K,EAAK4K,MAAMC,OACnB1H,YAAab,KAIjBqI,EAAS,CAAErP,KAAM2I,QAElBzD,OAAM,SAACC,GACNkK,EAAS,CACPrP,KAAMiP,GACNpK,QAASM,EAAIN,cCvBJ2K,CAAWL,MAEvB,CAAC9F,EAAY8F,IAEhB,MAA8BrG,IAAY,SAACZ,GAAD,OAAuBA,EAAMoH,SAA/DA,EAAR,EAAQA,MAAOxH,EAAf,EAAeA,WAEf,OACE,qBAAKzI,UAAWmL,KAAOiF,UAAvB,SACGH,EAAMC,SAAWzH,EAChB,qCACE,mBAAGzI,UAAU,6CAAb,SAA2DiQ,EAAMC,SACjE,mBAAGlQ,UAAU,uCAAb,iIAEA,qBAAKa,IAAKwP,GAAkBtP,IAAI,KAEhC,mBAAGf,UAAU,mCAAmCkL,MAAO,CAAEoF,SAAU,IAAnE,qJAGA,mBAAGtQ,UAAU,iDAAiDkL,MAAO,CAAEoF,SAAU,IAAjF,+PAKF,qCACE,mBAAGtQ,UAAU,oDAAb,4GACA,cAAC,KAAD,CAAQW,KAAK,eAAe4P,MAAM,UAAUC,OAAQ,IAAKC,MAAO,Y,wCCb3DC,GAlBiBC,cAC9B,YAAuD,IAApD7G,EAAmD,EAAnDA,WACKE,EAAaL,KAEnB,OACE,sBAAK3J,UAAW,CAACmL,KAAOyF,8BAA+B,QAAQxQ,KAAK,KAApE,UACE,cAAC,WAAD,CAAUO,KAAK,YACf,cAAC,qBAAD,CACEkQ,UAAW/G,EAAWuB,aACtByF,KAAMhH,EAAW5I,KACjBuK,MAAO3B,EAAW2B,MAClBsF,YAAa,kBAAM/G,EAAW,CAAErJ,KAAMyI,GAAoCU,wBC8KrEkH,GA3KqB,WAClC,MAA4ClF,oBAAkB,GAA9D,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAAoCzH,IAAY,SAACZ,GAAD,OAAuBA,EAAMkB,qBAArEvB,EAAR,EAAQA,YAAa2I,EAArB,EAAqBA,WACfC,EAAqB3H,IACzB,SAACZ,GAAD,OAAuBA,EAAMuI,mBAAmBtH,cAE5CE,EAAaL,KACbjD,EAAO+C,IAAY,SAACZ,GAAD,OAAuBA,EAAMwI,KAAK3K,QACrDV,EAAUgF,cACVF,EAAWC,cAEjB,EAAkCuG,aAAQ,CACxCC,OAAQ,cACRC,KAFwC,SAEnC1H,GACHE,EAAW,CAAErJ,KAAMwI,GAA+BW,WAAW,eAAMA,MAErEK,QAAS,SAACC,GAAD,MAAc,CACrBqH,QAASrH,EAAQsH,aANrB,mBAASD,EAAT,KAASA,QAAWE,EAApB,KA0BMC,EACJpJ,EAAY,IAAMA,EAAY,GAAG7H,OAAS0F,EAAiB0F,IAAMvD,EAAY,GAAK,KAE9EqJ,EAAeC,cAAkB,YAA+C,IAA5CC,EAA2C,EAA3CA,MACxC,OACE,8BACGA,EAAMvL,KAAI,SAAC+H,EAAKyD,GAAN,OACT,cAAC,GAAD,CAEEA,MAAOJ,EAAYI,EAAQ,EAAIA,EAC/BlI,WAAYyE,GAHd,UACUyD,EADV,YACmBzD,EAAI1D,cAgBzBoH,EAAyBC,mBAAQ,WACrC,OAAO1J,EAAY8F,QAAO,SAAC6D,GAAD,OAAOA,EAAExR,OAAS0F,EAAiB0F,SAC5D,CAACvD,IAEJ,OACE,0BAAS4J,OAAQ,SAAClD,GAAD,OAAOA,EAAEmD,kBAAkBrS,UAAWmL,KAAOjL,UAAW+K,IAAK0G,EAA9E,WACIC,GACA,qBACE5R,UAAS,8EAETmL,KAAOmH,gBAFE,sBAITlB,GACAA,EAAmBzQ,OAAS0F,EAAiB0F,KAC7CZ,KAAOoH,eAPT,SAUE,sBAAMvS,UAAU,2BAAhB,kMAIH4R,GACC,qBAAK5R,UAAU,OAAf,SACE,cAAC,qBAAD,CACE6Q,UAAWe,EAAUvG,aACrByF,KAAMc,EAAU1Q,KAChBuK,MAAOmG,EAAUnG,MACjB+G,UAAU,EACV7R,KAAK,UAKX,sBACEX,UAAW,CACTmL,KAAOsH,iCACPR,EAAuBlC,OAAS,EAAI5E,KAAOuH,mBAAqB,MAChEtS,KAAK,KAJT,WAMI6R,EAAuBlC,QACvB,qBACE/P,UAAS,0CACTmL,KAAOmH,gBADE,wBAGTlB,GACAA,EAAmBzQ,OAAS0F,EAAiB0F,KAC7CZ,KAAOoH,eANT,SASE,sBAAMvS,UAAU,2BAAhB,mIAGJ,cAAC6R,EAAD,CAAcE,MAAOE,EAAwBU,UA3DjC,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,SAC7B7I,EAAW,CACTrJ,KAAM0I,GACNyJ,2BAA4B,CAAEtH,KAAMoH,EAAUnS,GAAIoS,MAwDmBE,SAAU,QAG7EnB,GACA,qBACE5R,UAAS,gFAETmL,KAAOmH,gBAFE,sBAITlB,GACAA,EAAmBzQ,OAAS0F,EAAiB0F,KAC7CZ,KAAOoH,eAPT,SAUE,sBAAMvS,UAAU,2BAAhB,kMAIH4R,GACC,qBAAK5R,UAAU,OAAf,SACE,cAAC,qBAAD,CACE6Q,UAAWe,EAAUvG,aACrByF,KAAMc,EAAU1Q,KAChBuK,MAAOmG,EAAUnG,MACjB+G,UAAU,EACV7R,KAAK,aAKVwQ,EAAa,GACZ,sBAAKnR,UAAW,CAACmL,KAAO6H,YAAa,aAAa5S,KAAK,KAAvD,UACE,sBAAMJ,UAAU,qCAAhB,SAAsDmR,IACtD,cAAC,eAAD,CAAcxQ,KAAK,YAEnB,qBAAKX,UAAU,OAAOsL,QA/HX,WACZ9C,EAAYiF,MAAK,SAACc,GAAD,OAASA,EAAI5N,OAAS0F,EAAiB0F,OAIzDrF,EACFwK,GAAkB,GAElBlL,EAAQO,KAAK,CAAEgF,SAAU,SAAU1C,MAAO,CAAE2C,KAAMV,KANlD/E,IAAMkN,KAAK,sQA6HP,SACE,cAAC,SAAD,CAAQtS,KAAK,UAAUgL,KAAK,QAA5B,kGAON,cAAC,GAAD,CAAOoD,KAAMkC,EAAgBxC,aA3Hf,WAChByC,GAAkB,IA0HhB,SACE,cAAC,GAAD,MAGDE,GACC,qBACEpR,UAAS,wCAAmCmL,KAAO+H,eAA1C,YAA4D/H,KAAOgI,WAD9E,SAGI1B,EAA0C,qEAAhC,uJ,yCCxKP2B,GAXY,WACzB,OACE,sBAAMpT,UAAW,CAACmL,KAAOjL,UAAW,QAAQE,KAAK,KAAjD,SACE,eAACiT,GAAA,EAAD,CAAaC,QAASC,KAAtB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,UCUOC,GAnBe,WAC5B,OACE,sBACEtI,MAAO,CACLuI,WAAY,GACZzF,QAAS,OACT0F,WAAY,SACZlD,OAAQ,OACRmD,cAAe,UANnB,UASE,oBAAI3T,UAAU,uCAAd,sHACA,cAAC,IAAD,CAAMkL,MAAO,CAAEqF,MAAO,SAAWvQ,UAAU,8BAA8BS,GAAI,IAA7E,oH,wCCAO8H,GAAgC,CAC3CR,MCd0D,CAC1DpH,KAAM,QACNiB,MAAO,GACPV,KAAM,QACN0S,YAAa,SACbC,SAAS,GDUT5L,SCR6D,CAC7DtH,KAAM,WACNiB,MAAO,GACPV,KAAM,WACN0S,YAAa,uCACbC,SAAS,EACTC,KAAM,YDGN5S,KCDyD,CACzDP,KAAM,OACNiB,MAAO,GACPV,KAAM,OACN0S,YAAa,qBACbC,SAAS,GDHTE,kBCMyD,CACzDpT,KAAM,OACNiB,MAAO,GACPV,KAAM,OACN0S,YAAa,kHACbC,SAAS,GDVTG,mBAAmB,EACnBC,4BAA4B,EAC5BC,0BAA0B,GAwDfC,GAAa7L,YAAY,CACpCpH,KAAM,QACNqH,gBACAI,SAAU,CACRyL,sBADQ,SACcvL,EAAwBC,GAC5CD,EAAMd,MAAMnG,MAAQkH,EAAO5F,QAC3B2F,EAAMd,MAAM8L,SAAU,GAExBQ,wBALQ,SAKgBxL,EAAwBC,GAC9CD,EAAMZ,SAASrG,MAAQkH,EAAO5F,QAC9B2F,EAAMZ,SAAS4L,SAAU,GAE3BS,qBATQ,SASazL,EAAwBC,GAC3CD,EAAM3H,KAAKU,MAAQkH,EAAO5F,QAC1B2F,EAAM3H,KAAK2S,SAAU,GAEvBU,qBAbQ,SAaa1L,EAAwBC,GAC3CD,EAAMkL,kBAAkBnS,MAAQkH,EAAO5F,QACvC2F,EAAMkL,kBAAkBF,SAAU,GAEpCW,sBAjBQ,SAiBc3L,EAAwBC,GAC5CD,EAAMd,MAAM0M,UAAY3L,EAAO5F,QAC/B2F,EAAMd,MAAM8L,SAAU,GAExBa,wBArBQ,SAqBgB7L,EAAwBC,GAC9CD,EAAMZ,SAASwM,UAAY3L,EAAO5F,QAClC2F,EAAMZ,SAAS4L,SAAU,GAE3Bc,qBAzBQ,SAyBa9L,EAAwBC,GAC3CD,EAAM3H,KAAKuT,UAAY3L,EAAO5F,QAC9B2F,EAAM3H,KAAK2S,SAAU,GAEvBe,qBA7BQ,SA6Ba/L,EAAwBC,GAC3CD,EAAMkL,kBAAkBU,UAAY3L,EAAO5F,QAC3C2F,EAAMkL,kBAAkBF,SAAU,GAEpCgB,uBAjCQ,SAiCehM,GACO,aAAxBA,EAAMZ,SAAStH,MACjBkI,EAAMZ,SAAStH,KAAO,OACtBkI,EAAMZ,SAAS6L,KAAO,aAEtBjL,EAAMZ,SAAStH,KAAO,WACtBkI,EAAMZ,SAAS6L,KAAO,aAG1BgB,kCA1CQ,SA0C0BjM,GAChCA,EAAMmL,mBAAoB,EAC1BnL,EAAMqL,0BAA2B,EACjCrL,EAAMoL,4BAA6B,GAErCc,4BA/CQ,SA+CoBlM,GAC1BA,EAAMoL,4BAA6B,GAErCD,kBAlDQ,SAkDUnL,GAChBA,EAAMmL,mBAAoB,EAC1BnL,EAAMqL,0BAA2B,EACjCrL,EAAMoL,4BAA6B,GAErCe,uBAvDQ,SAuDenM,GACrBA,EAAMmL,mBAAoB,EAC1BnL,EAAMqL,0BAA2B,EACjCrL,EAAMoL,4BAA6B,MAKlC,GAaHE,GAAWc,QAZbb,GADK,GACLA,sBACAC,GAFK,GAELA,wBACAQ,GAHK,GAGLA,uBAGAL,IANK,GAILR,kBAJK,GAKLgB,uBALK,GAMLR,uBACAE,GAPK,GAOLA,wBACAJ,GARK,GAQLA,qBACAC,GATK,GASLA,qBACAI,GAVK,GAULA,qBACAC,GAXK,GAWLA,qBACAG,GAZK,GAYLA,4BAGWG,GAAoBf,GAAWjL,QE1B/BiM,GAAU,yDAAM,WAAOnF,EAAwBoF,GAA/B,+BAAAzO,EAAA,2DACsCwN,GAAWc,QAApEH,EADmB,EACnBA,kCAAmCd,EADhB,EACgBA,kBADhB,EAGgBqB,GAAUJ,QAA7CK,EAHmB,EAGnBA,YAAaC,EAHM,EAGNA,kBAHM,EAIMH,IAAW/D,KAApC3K,EAJmB,EAInBA,KAAM8O,EAJa,EAIbA,gBAEV9O,IAAUA,GAASzF,EAAU,gBANN,yCAOlB,IAAIgF,SAAc,SAACC,EAASE,GACjCF,QARuB,WAWvBsP,EAXuB,wDAc3BxF,EAASuF,KACTvF,EAASgE,KAfkB,kBAgBpBzM,IAAiBrC,MAAK,SAACG,GAC5B2K,EAAS8E,KACT9E,EAASoE,GAAsB/O,EAAKqB,KAAKqB,QACzCiI,EAASsE,GAAqBjP,EAAKqB,KAAKxF,OACxC8O,EAASsF,EAAYjQ,QApBI,4CAAN,yDAwBVgQ,GAAY/M,YAAY,CACnCpH,KAAM,OACNqH,aArI0C,CAC1C7B,KAAM,KACN8O,gBAAgB,GAoIhB7M,SAAU,CACR8M,kBADQ,SACU5M,EAAuBC,GACvCD,EAAMnC,KAAOoC,EAAO5F,QAAQwD,KAC5B/E,EAAU,cAAesB,EAAoB6F,EAAO5F,QAAQwC,cAC5DhD,EAAmB,eAAgBoG,EAAO5F,QAAQyC,eAEpD+P,2BANQ,SAMmB7M,EAAuBC,GAChDD,EAAMnC,KAAOoC,EAAO5F,QAAQwD,KAC5B/E,EAAU,cAAesB,EAAoB6F,EAAO5F,QAAQwC,cAC5DhD,EAAmB,eAAgBoG,EAAO5F,QAAQyC,eAEpDgQ,gCAXQ,SAWwB9M,EAAuBC,GACrDD,EAAMnC,KAAOoC,EAAO5F,QAAQwD,MAE9BkP,UAdQ,SAcE/M,GACRA,EAAMnC,KAAO,KACbjE,EAAa,eACbM,EAAuB,iBAEzB8S,eAnBQ,SAmBOhN,EAAuBC,GACpCnH,EAAU,cAAesB,EAAoB6F,EAAO5F,QAAQwC,cAC5DhD,EAAmB,eAAgBoG,EAAO5F,QAAQyC,eAEpD2P,YAvBQ,SAuBIzM,EAAuBC,GACjCD,EAAMnC,KAAOoC,EAAO5F,QAAQwD,KAC5BmC,EAAM2M,gBAAiB,GAEzBD,kBA3BQ,SA2BU1M,GAChBA,EAAM2M,gBAAiB,GAEzBM,+BA9BQ,SA8BuBjN,GAC7BA,EAAM2M,gBAAiB,MAMhBO,GAAmBV,GAAUnM,QC9E3B8M,GArGa,WAC1B,IAAMhQ,EAAUgF,cACVF,EAAWC,cACXf,EAAaL,KACnB,EAAyEF,IACvE,SAACZ,GAAD,OAAuBA,EAAMoN,SADvBlO,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAAUiM,EAAzB,EAAyBA,yBAA0BF,EAAnD,EAAmDA,kBAgDnD,OACE,sBAAKhU,UAAWmL,KAAOjL,UAAvB,UACE,cAAC,OAAD,IACA,mBAAGF,UAAU,mCAAb,sCACA,uBAAMkW,SAtCW,SAAChH,GAapB,GAZAA,EAAEmD,iBAEG8D,KAAUC,QAAQrO,EAAMnG,QAC3BoI,EAAWwK,GAAsB,oHAE/B2B,KAAUE,QAAQtO,EAAMnG,QAC1BoI,EAAWwK,GAAsB,oKAE/B2B,KAAUE,QAAQpO,EAASrG,QAC7BoI,EAAW0K,GAAwB,oKAIlCyB,KAAUC,QAAQrO,EAAMnG,SACzBuU,KAAUE,QAAQtO,EAAMnG,SACxBuU,KAAUE,QAAQpO,EAASrG,OAH7B,CAOA,IAAM8E,EAAc,CAClBqB,MAAOA,EAAMnG,MACbqG,SAAUA,EAASrG,OAEf0U,EAAiBxL,EAASjC,MAChCmB,EDJqB,SAACtD,EAAaJ,GAAd,OAAuC,SAAC0J,GAC/D,MAIImE,GAAWc,QAHbH,EADF,EACEA,kCACAd,EAFF,EAEEA,kBACAgB,EAHF,EAGEA,uBAGMU,EAA+BL,GAAUJ,QAAzCS,2BAGR,OADA1F,EAASgE,KACF1M,EAAaZ,GACjBxB,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MAAMF,EAAKG,QAAUH,EAAKG,QAAU,oIAEhDwK,EAAS8E,KACT9E,EAAS0F,EAA2BrQ,IACpCiB,OAEDT,OAAM,SAACC,GACNkK,EAASgF,KACTjP,IAAMlB,MAAMiB,EAAIN,aCjBhB+Q,CAAU7P,GAAM,WACdV,EAAQxE,QACN8U,GAAkBA,EAAe9K,KAAO8K,EAAe9K,KAAO,CAAED,SAAU,YAU9E,UACE,qBAAKvL,UAAU,OAAf,SACE,cAAC,QAAD,CACEW,KAAMoH,EAAMpH,KACZiT,YAAa7L,EAAM6L,YACnB4C,SArDY,SAACtH,GACrBlF,EAAWoK,GAAsBlF,EAAEvC,OAAO/K,SAqDlCA,MAAOmG,EAAMnG,MACbV,KAAM6G,EAAM7G,KACZ2D,MAAOkD,EAAM8L,QACbY,UAAW1M,EAAM0M,UACjB9I,KAAM,cAGV,qBAAK3L,UAAU,OAAf,SACE,cAAC,QAAD,CACEW,KAAMsH,EAAStH,KACfiT,YAAa3L,EAAS2L,YACtB4C,SA9De,SAACtH,GACxBlF,EAAWqK,GAAwBnF,EAAEvC,OAAO/K,SA8DpCA,MAAOqG,EAASrG,MAChBV,KAAM+G,EAAS/G,KACf2D,MAAOoD,EAAS4L,QAChBY,UAAWxM,EAASwM,UACpB9I,KAAM,UACNmI,KAAM7L,EAAS6L,KACf2C,YAlEgB,WACxBzM,EAAW6K,WAoEP,cAAC,SAAD,CAAQlU,KAAK,UAAUgL,KAAK,QAA5B,SACIqI,EAA8B,0GAAV,sCAIzBE,GACC,mBAAGlU,UAAU,8BAAb,wNAEF,oBAAGA,UAAU,wDAAb,qIAC2B,cAAC,IAAD,CAAMS,GAAI,YAAV,6HAE3B,oBAAGT,UAAU,kDAAb,wFACiB,cAAC,IAAD,CAAMS,GAAI,mBAAV,kIC6BRiW,GA1HgB,WAC7B,MAOIjN,IAAY,SAACZ,GAAD,OAAuBA,EAAMoN,SAN3ClO,EADF,EACEA,MACAE,EAFF,EAEEA,SACA/G,EAHF,EAGEA,KACAgT,EAJF,EAIEA,yBACAF,EALF,EAKEA,kBACAC,EANF,EAMEA,2BAGIjK,EAAaL,KACb3D,EAAUgF,cA2DhB,OAVAR,qBAAU,WACJyJ,GACFjO,EAAQxE,QAAQ,YAEjB,CAACyS,EAA4BjO,IAEhCwE,qBAAU,WACRR,EAAW+K,QACV,CAAC/K,IAGF,sBAAKhK,UAAWmL,KAAOjL,UAAvB,UACE,cAAC,OAAD,IACA,mBAAGF,UAAU,mCAAb,gFACA,uBAAMkW,SA9CW,SAAChH,GAgBpB,GAfAA,EAAEmD,iBAEG8D,KAAUC,QAAQrO,EAAMnG,QAC3BoI,EAAWwK,GAAsB,oHAE/B2B,KAAUE,QAAQtO,EAAMnG,QAC1BoI,EAAWwK,GAAsB,oKAE/B2B,KAAUE,QAAQpO,EAASrG,QAC7BoI,EAAW0K,GAAwB,oKAEjCyB,KAAUE,QAAQnV,EAAKU,QACzBoI,EAAW2K,GAAqB,oKAI/BwB,KAAUC,QAAQrO,EAAMnG,SACzBuU,KAAUE,QAAQtO,EAAMnG,SACxBuU,KAAUE,QAAQpO,EAASrG,SAC3BuU,KAAUE,QAAQnV,EAAKU,OAJzB,CAQA,IAAM8E,EAAc,CAClBqB,MAAOA,EAAMnG,MACbqG,SAAUA,EAASrG,MACnBV,KAAMA,EAAKU,OAEboI,EF9CwB,SAACtD,GAAD,OAAiB,SAACsJ,GAC5C,MAIImE,GAAWc,QAHbH,EADF,EACEA,kCACAd,EAFF,EAEEA,kBACAgB,EAHF,EAGEA,uBAGMS,EAAsBJ,GAAUJ,QAAhCQ,kBAGR,OADAzF,EAASgE,KACFvN,EAAgBC,GACpBxB,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MAAMF,EAAKG,QAAUH,EAAKG,QAAU,oIAEhDwK,EAAS8E,KACT9E,EAASyF,EAAkBpQ,IAC3BU,IAAMT,QAAQ,yJAEfO,OAAM,SAACC,GACNkK,EAASgF,KACTjP,IAAMlB,MAAMiB,EAAIN,aEwBPmR,CAAajQ,MAiBtB,UACE,cAAC,QAAD,CACE/F,KAAMO,EAAKP,KACXiT,YAAa1S,EAAK0S,YAClB4C,SAtDa,SAACtH,GACpBlF,EAAWsK,GAAqBpF,EAAEvC,OAAO/K,SAsDnCA,MAAOV,EAAKU,MACZV,KAAMA,EAAKA,KACX2D,MAAO3D,EAAK2S,QACZY,UAAWvT,EAAKuT,UAChB9I,KAAM,YAER,cAAC,QAAD,CACEhL,KAAMoH,EAAMpH,KACZiT,YAAa7L,EAAM6L,YACnB4C,SA3Ec,SAACtH,GACrBlF,EAAWoK,GAAsBlF,EAAEvC,OAAO/K,SA2EpCA,MAAOmG,EAAMnG,MACbV,KAAM6G,EAAM7G,KACZ2D,MAAOkD,EAAM8L,QACbY,UAAW1M,EAAM0M,UACjB9I,KAAM,YAER,cAAC,QAAD,CACEhL,KAAMsH,EAAStH,KACfiT,YAAa3L,EAAS2L,YACtB4C,SAlFiB,SAACtH,GACxBlF,EAAWqK,GAAwBnF,EAAEvC,OAAO/K,SAkFtCA,MAAOqG,EAASrG,MAChBV,KAAM+G,EAAS/G,KACf2D,MAAOoD,EAAS4L,QAChBY,UAAWxM,EAASwM,UACpB9I,KAAM,UACNmI,KAAM7L,EAAS6L,KACf2C,YArFkB,WACxBzM,EAAW6K,SAsFP,cAAC,SAAD,CAAQlU,KAAK,UAAUgL,KAAK,QAA5B,SACIqI,EAA2C,gHAAvB,oHAIzBE,GACC,mBAAGlU,UAAU,8BAAb,kNAEF,oBAAGA,UAAU,wDAAb,kIACwB,cAAC,IAAD,CAAMS,GAAI,SAAV,mDCrDfmW,GApEsB,WACnC,MAKInN,IAAY,SAACZ,GAAD,OAAuBA,EAAMoN,SAJ3ClO,EADF,EACEA,MACAmM,EAFF,EAEEA,yBACAF,EAHF,EAGEA,kBACAC,EAJF,EAIEA,2BAEIjK,EAAaL,KACb3D,EAAUgF,cACVF,EAAWC,cA8BjB,OAPAP,qBAAU,WACJyJ,IACFjK,EAAW+K,MACX/O,EAAQxE,QAAQ,CAAE+J,SAAU,kBAAmB1C,MAAO,CAAE2C,KAAMV,QAE/D,CAACmJ,EAA4BjO,EAAS8E,EAAUd,IAGjD,sBAAKhK,UAAWmL,KAAOjL,UAAvB,UACE,cAAC,OAAD,IACA,mBAAGF,UAAU,mCAAb,uIACA,uBAAMkW,SA5BW,SAAChH,GACpBA,EAAEmD,iBAEG8D,KAAUC,QAAQrO,EAAMnG,QAC3BoI,EAAWwK,GAAsB,oHAE/B2B,KAAUE,QAAQtO,EAAMnG,QAC1BoI,EAAWwK,GAAsB,oKAG9B2B,KAAUC,QAAQrO,EAAMnG,SAAUuU,KAAUE,QAAQtO,EAAMnG,QAI/DoI,GLnB6C,SAC/CgG,EACAoF,GAEA,MAIIjB,GAAWc,QAHbH,EADF,EACEA,kCACAd,EAFF,EAEEA,kBACAgB,EAHF,EAGEA,uBAEMjN,EAAUqN,IAAWa,MAArBlO,MAGR,OADAiI,EAASgE,KACFlM,EAAqBC,EAAMnG,OAC/BsD,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MAAMF,EAAKR,MAAQQ,EAAKR,MAAQ,oIAE5CmL,EAAS8E,KACT/O,IAAMT,QAAQ,qRAEfO,OAAM,SAACC,GACNkK,EAASgF,KACTjP,IAAMlB,MAAMiB,EAAIN,gBKUhB,UACE,cAAC,QAAD,CACE7E,KAAMoH,EAAMpH,KACZiT,YAAa7L,EAAM6L,YACnB4C,SApCc,SAACtH,GACrBlF,EAAWoK,GAAsBlF,EAAEvC,OAAO/K,SAoCpCA,MAAOmG,EAAMnG,MACbV,KAAM6G,EAAM7G,KACZ2D,MAAOkD,EAAM8L,QACbY,UAAW1M,EAAM0M,UACjB9I,KAAM,YAER,cAAC,SAAD,CAAQhL,KAAK,UAAUgL,KAAK,QAA5B,SACIqI,EAAqC,gHAAjB,gFAGzBE,GACC,mBAAGlU,UAAU,8BAAb,kNAEF,oBAAGA,UAAU,wDAAb,0GACoB,cAAC,IAAD,CAAMS,GAAI,SAAV,mDCqCXoW,GAjGqB,WAClC,IAAM7Q,EAAUgF,cACVF,EAAWC,cAEjBP,qBAAU,WACR,IAAQgB,GAASV,EAASjC,MAASiC,EAASjC,MAA2B,CAAE2C,KAAM,OAAvEA,KACe,sBAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMD,WACRvF,EAAQxE,QAAQ,CAAE+J,SAAU,uBAE7B,CAACvF,EAAS8E,EAASjC,QAEtB,MAMIY,IAAY,SAACZ,GAAD,OAAuBA,EAAMoN,SAL3ChO,EADF,EACEA,SACA8L,EAFF,EAEEA,kBACAG,EAHF,EAGEA,yBACAF,EAJF,EAIEA,kBACAC,EALF,EAKEA,2BAEIjK,EAAaL,KAqCnB,OANAa,qBAAU,WACJyJ,GACFjO,EAAQxE,QAAQ,YAEjB,CAACyS,EAA4BjO,IAG9B,sBAAKhG,UAAWmL,KAAOjL,UAAvB,UACE,cAAC,OAAD,IACA,mBAAGF,UAAU,mCAAb,uIACA,uBAAMkW,SA3BW,SAAChH,GACpBA,EAAEmD,iBAEE8D,KAAUE,QAAQpO,EAASrG,QAC7BoI,EAAW0K,GAAwB,oKAEjCyB,KAAUE,QAAQtC,EAAkBnS,QACtCoI,EAAW4K,GAAqB,oKAG9BuB,KAAUE,QAAQpO,EAASrG,QAAUuU,KAAUE,QAAQtC,EAAkBnS,QAI7EoI,GNXsC,SAACgG,EAAwBoF,GACjE,MAIIjB,GAAWc,QAHbH,EADF,EACEA,kCACAd,EAFF,EAEEA,kBACAgB,EAHF,EAGEA,uBAEF,EAAwCI,IAAWa,MAA3ChO,EAAR,EAAQA,SAAU8L,EAAlB,EAAkBA,kBAGlB,OADA/D,EAASgE,KACFhM,EAAuBC,EAASrG,MAAOmS,EAAkBnS,OAC7DsD,MAAK,SAACC,GACL,OAAOA,EAAKC,UAEbF,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MAAMF,EAAKG,QAAUH,EAAKG,QAAU,oIAEhDwK,EAAS8E,KACT/O,IAAMT,QAAQ,iIAEfO,OAAM,SAACC,GACNkK,EAASgF,KACTjP,IAAMlB,MAAMiB,EAAIN,gBMEhB,UACE,cAAC,QAAD,CACE7E,KAAMsH,EAAStH,KACfiT,YAAa3L,EAAS2L,YACtB4C,SA3CiB,SAACtH,GACxBlF,EAAWqK,GAAwBnF,EAAEvC,OAAO/K,SA2CtCA,MAAOqG,EAASrG,MAChBV,KAAM+G,EAAS/G,KACf2D,MAAOoD,EAAS4L,QAChBY,UAAWxM,EAASwM,UACpB9I,KAAM,UACNmI,KAAM7L,EAAS6L,KACf2C,YA9CkB,WACxBzM,EAAW6K,SA+CP,cAAC,QAAD,CACElU,KAAMoT,EAAkBpT,KACxBiT,YAAaG,EAAkBH,YAC/B4C,SA/Ca,SAACtH,GACpBlF,EAAWuK,GAAqBrF,EAAEvC,OAAO/K,SA+CnCA,MAAOmS,EAAkBnS,MACzBV,KAAM6S,EAAkB7S,KACxB2D,MAAOkP,EAAkBF,QACzBY,UAAWV,EAAkBU,UAC7B9I,KAAM,YAER,cAAC,SAAD,CAAQhL,KAAK,UAAUgL,KAAK,QAA5B,SACIqI,EAAkC,gHAAd,8DAIzBE,GACC,mBAAGlU,UAAU,8BAAb,kNAEF,oBAAGA,UAAU,wDAAb,0GACoB,cAAC,IAAD,CAAMS,GAAI,SAAV,mD,yCCzFXqW,GAhBiB,SAAC,GAAkC,IAAhC7G,EAA+B,EAA/BA,MACjC,MAAwB,SAAjBA,EAAMlL,OACX,mBAAG/E,UAAU,qDAAqDkL,MAAO,CAAEoF,SAAU,IAArF,8DAGmB,YAAjBL,EAAMlL,OACR,mBAAG/E,UAAU,mCAAmCkL,MAAO,CAAEoF,SAAU,IAAnE,kDAIA,mBAAGtQ,UAAU,oDAAoDkL,MAAO,CAAEoF,SAAU,IAApF,qEC+CWyG,GArDK,SAAC,GAAkC,IAAhC9G,EAA+B,EAA/BA,MACf3O,EAAQ0V,cACRlM,EAAWC,cACX/E,EAAUgF,cAEViM,EAAa/E,mBAAQ,WACzB,OAAOjC,EAAMzH,YAAYhC,KAAI,SAAC+H,GAAD,OAAUA,EAAMA,EAAI9C,MAAQ,KAAIf,QAAO,SAAC/D,EAAGuQ,GAAJ,OAAUvQ,EAAIuQ,IAAG,KACpF,CAACjH,EAAMzH,cAIV,OACE,sBACExI,UAAWmL,KAAOjL,UAClBoL,QAAS,kBACPtF,EAAQO,KAAK,CAAEgF,SAAS,GAAD,OAAKjK,EAAM6V,IAAX,YAAkBlH,EAAMC,QAAUrH,MAAO,CAAE2C,KAAMV,MAH5E,UAME,sBAAK9K,UAAWmL,KAAOiM,kBAAvB,UACE,oBAAGpX,UAAU,gCAAb,cAA+CiQ,EAAMC,UACrD,oBAAGlQ,UAAU,kDAAb,UAAgEiQ,EAAMoH,UAAtE,iBAEF,mBAAGrX,UAAU,6BAAb,SAA2CiQ,EAAM/O,OAEjD,cAAC,GAAD,CAAkB+O,MAAOA,IAEzB,sBAAKjQ,UAAWmL,KAAOmM,+BAAvB,UACE,qBAAKtX,UAAWmL,KAAOC,qBAAvB,SACG6E,EAAMzH,YAAYhC,KAAI,SAACsD,EAAYkI,GAAb,OACrBA,EApBkB,EAqBhB,sBAAiBhS,UAAWmL,KAAOoM,iBAAnC,UACE,qBAAK1W,IAAG,OAAEiJ,QAAF,IAAEA,OAAF,EAAEA,EAAYuB,aAActK,IAAG,OAAE+I,QAAF,IAAEA,OAAF,EAAEA,EAAY5I,OACpD+O,EAAMzH,YAAYuH,OAvBL,EAuBoC,GAAe,IAAViC,EACrD,oBACE9G,MAAO,CAAEsM,SAAU,WAAYC,IAAK,GAAIC,KAAM,IAC9C1X,UAAU,gCAFZ,cAIIiQ,EAAMzH,YAAYuH,OA5BV,KA8BV,OATIiC,GAWR,UAGR,sBAAKhS,UAAWmL,KAAOM,MAAvB,UACE,sBAAMzL,UAAU,qCAAhB,SAAsDiX,IAAmB,IACzE,cAAC,eAAD,CAActW,KAAK,sBCtCdgX,GAVI,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OACpB,OACE,qBAAK5X,UAAWmL,KAAOjL,UAAvB,SACG0X,EAAOpR,KAAI,SAACyJ,EAAO+B,GAAR,OACV,cAAC,GAAD,CAAyB/B,MAAOA,GAAd+B,S,qBCYX6F,GAfY,WACzB,MAA6DpO,cAC3D,SAACZ,GAAD,OAAuBA,EAAMiP,QADvBF,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,yBAIhC,OACE,sBAAKhY,UAAWmL,KAAOjL,UAAvB,UACE,mBAAGF,UAAU,wCAAb,uFACC+X,EAAiB,iIAAiC,cAAC,GAAD,CAAYH,OAAQA,IAEtEI,GAA4B,0L,oBCXtBC,GAAwB,WACnC,MAAsCxO,cAAY,SAACZ,GAAD,OAAuBA,EAAMiP,QAAvEI,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAAYP,EAA3B,EAA2BA,OAErBQ,EAAclG,mBAAQ,WAC1B,OAAO0F,EAAOtJ,QAAO,SAAC2B,GAAD,MAA4B,SAAjBA,EAAMlL,YACrC,CAAC6S,IAEES,EAAiBnG,mBAAQ,WAC7B,OAAO0F,EAAOtJ,QAAO,SAAC2B,GAAD,MAA4B,SAAjBA,EAAMlL,YACrC,CAAC6S,IAEJ,OACE,sBAAK5X,UAAWmL,KAAOjL,UAAvB,UACE,sBAAKF,UAAWmL,KAAOmN,eAAvB,UACE,gCACE,mBAAGtY,UAAU,kCAAb,mDACA,qBAAKA,UAAW,CAACmL,KAAOoN,sBAAuBpN,KAAOqN,cAAcpY,KAAK,KAAzE,SACGgY,EAAY5R,KAAI,SAACyJ,GAAD,OACf,mBAAsBjQ,UAAU,qCAAhC,SACGiQ,EAAMC,QADDD,EAAMC,gBAMpB,gCACE,mBAAGlQ,UAAU,kCAAb,0DACA,qBAAKA,UAAWmL,KAAOoN,sBAAvB,SACGF,EAAe7R,KAAI,SAACyJ,GAAD,OAClB,mBAAsBjQ,UAAU,qCAAhC,SACGiQ,EAAMC,QADDD,EAAMC,mBAOtB,mBAAGlQ,UAAU,wCAAb,oIACA,mBAAGA,UAAU,wCAAb,SAAsDkY,IACtD,mBAAGlY,UAAU,wCAAb,6HACA,mBAAGA,UAAU,wCAAb,SAAsDmY,Q,qBCnC/C5P,GAA+B,CAC1CqP,OAAQ,GACRG,gBAAgB,EAChBC,0BAA0B,EAC1B/H,WAAOvO,EACP+W,iBAAiB,EACjBC,2BAA2B,EAC3BR,MAAO,EACPC,WAAY,GA2BDQ,GAAYrQ,YAAY,CACnCpH,KAAM,OACNqH,gBACAI,SAAU,CACRiQ,YADQ,SACI/P,EAAuBC,GACjCD,EAAMkP,gBAAiB,EACvBlP,EAAMmP,0BAA2B,EACjCnP,EAAM+O,OAAS9O,EAAO5F,QAAQ0U,OAC9B/O,EAAMqP,MAAQpP,EAAO5F,QAAQgV,MAC7BrP,EAAMsP,WAAarP,EAAO5F,QAAQiV,YAEpCU,eARQ,SAQOhQ,GACbA,EAAMkP,gBAAiB,EACvBlP,EAAMmP,0BAA2B,GAEnCc,gBAZQ,SAYQjQ,GACdA,EAAMkP,gBAAiB,EACvBlP,EAAMmP,0BAA2B,EACjCnP,EAAM+O,OAAS,GACf/O,EAAMqP,MAAQ,EACdrP,EAAMsP,WAAa,GAErBY,iBAnBQ,SAmBSlQ,GACfA,EAAMkP,gBAAiB,EACvBlP,EAAMmP,0BAA2B,GAEnCgB,eAvBQ,SAuBOnQ,GACbA,EAAMkP,gBAAiB,EACvBlP,EAAMmP,0BAA2B,EACjCnP,EAAM+O,OAAS,GACf/O,EAAMqP,MAAQ,EACdrP,EAAMsP,WAAa,GAErBc,aA9BQ,SA8BKpQ,EAAuBC,GAClCD,EAAM4P,iBAAkB,EACxB5P,EAAM6P,2BAA4B,EAClC7P,EAAMoH,MAAQnH,EAAO5F,SAEvBgW,gBAnCQ,SAmCQrQ,GACdA,EAAM4P,iBAAkB,EACxB5P,EAAM6P,2BAA4B,GAEpCS,gBAvCQ,SAuCQtQ,GACdA,EAAM4P,iBAAkB,EACxB5P,EAAM6P,2BAA4B,EAClC7P,EAAMoH,WAAQvO,MAKb,GAA2EiX,GAAU1D,QAA7E4D,GAAR,GAAQA,eAAgBE,GAAxB,GAAwBA,iBAAkBH,GAA1C,GAA0CA,YAAaE,GAAvD,GAAuDA,gBAEjDM,GAAmBT,GAAUzP,QCvF7BmQ,GAAiB,WAC5B,IAAMrJ,EAAWrG,KACTnB,EAAgBiB,IAAY,SAACZ,GAAD,OAAuBA,EAAML,eAAzDA,YAWR,OATAgC,qBAAU,WAIR,OAHIhC,EAAYuH,QACdC,EAAS6I,MAEJ,WACL7I,EAAS8I,SAEV,CAAC9I,EAAUxH,IAGZ,sBAAKxI,UAAWmL,KAAOjL,UAAvB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,Q,wCCSSoZ,GA5BqB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,qBAIA,OACE,sBAAKvZ,UAAWmL,KAAOjL,UAAvB,UACE,sBAAKF,UAAWmL,KAAOqO,WAAvB,UACE,qBAAKxZ,UAAWmL,KAAOoM,iBAAvB,SACE,qBACE1W,IAAK0Y,EAAqBzP,WAAWuB,aACrCtK,IAAKwY,EAAqBzP,WAAW5I,SAGzC,mBAAGlB,UAAU,mCAAb,SAAiDuZ,EAAqBzP,WAAW5I,UAEnF,sBAAKlB,UAAWmL,KAAOsO,aAAvB,UACE,mBAAGzZ,UAAU,gCAAb,SAA8CuZ,EAAqB9O,SACnE,mBAAGzK,UAAU,wCAAb,eACA,mBAAGA,UAAU,qCAAb,SACGuZ,EAAqBzP,WAAW2B,QAEnC,cAAC,eAAD,CAAc9K,KAAK,mBCiFZ+Y,GAhGqB,WAClC,IAAQC,EAAaC,cAAbD,SACR,EAA6ClQ,IAAY,SAACZ,GAAD,OAAuBA,EAAMiP,QAA9E7H,EAAR,EAAQA,MAAOyI,EAAf,EAAeA,0BACT1I,EAAWrG,KACXmB,EAAWC,cACXzJ,EAAQ0V,cAENxL,GAASV,EAASjC,MAASiC,EAASjC,MAA2B,CAAE2C,KAAM,OAAvEA,KAEFhD,EAAuC0J,mBAAQ,WACnD,IAAM2H,EAAkC,GAExC,OAAK5J,GAEeA,EAAMzH,YACdsE,SAAQ,SAAChD,GACnB,IAAMkI,EAAQ6H,EAAOC,WAAU,SAACC,GAAD,OAAYA,EAAOjQ,WAAWe,OAAlB,OAA0Bf,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAYe,SAClE,IAAXmH,EACElI,GAAY+P,EAAOtT,KAAK,CAAEuD,WAAYA,EAAYW,OAAQ,IAE1DX,IAAY+P,EAAO7H,GAAOvH,QAAU,MAGrCoP,GAXY,KAYlB,CAAC5J,IAEI2H,EAAWnO,IAAY,SAACZ,GAAD,OAAuBA,EAAMiP,QAApDF,OAEFoC,EAAiBvQ,IAAY,SAACZ,GAAD,OAAuBA,EAAML,YAAYA,eAE5EgC,qBAAU,WACJwP,EAAejK,SAAW6H,EAAO7H,SACpB,oBAAfzO,EAAM2Y,KAA6BjK,EAAS6I,MAAoB7I,EAAS+I,SAE1E,CAAC/I,EAAUgK,EAAgBpC,EAAQtW,IAEtCkJ,qBAAU,WHxBoB,IAAC0P,EGyBzBtC,EAAO7H,QACTC,GH1B2BkK,EG0BDP,EH1BgB,SAC9C3J,EACAoF,GAEA,MAA2DuD,GAAU1D,QAA7DgE,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,gBAAiBD,EAAvC,EAAuCA,gBACjCiB,EAAa/E,IAAW0C,KAAKF,OACnC,GAAKuC,EAAWpK,OAAhB,CAGAC,EAASkJ,KACT,IAAMjJ,EAAQkK,EAAW1M,MAAK,SAAC2M,GAAD,OAAQA,EAAGlK,SAAWgK,KAC/CjK,EAIHD,EAASiJ,EAAahJ,KAHtBD,EAASmJ,KACTpT,IAAMlB,MAAM,8LGeX,CAACmL,EAAU2J,EAAU/B,IAExB,IAAMX,EAAa/E,mBAAQ,WACzB,OAAO1J,EAAYhC,KAAI,SAAC+H,GAAD,OAASA,EAAIzE,WAAW2B,MAAQ8C,EAAI9D,UAAQC,QAAO,SAAC/D,EAAGuQ,GAAJ,OAAUvQ,EAAIuQ,IAAG,KAC1F,CAAC1O,IAEE6R,EAA0B,kBAC9BnI,mBACE,kBACE,qBAAKlS,UAAWmL,KAAOjL,UAAvB,SACGwY,EACC,mBAAG1Y,UAAU,kDAAb,8IAIA,mBAAGA,UAAU,kDAAb,gHAIN,KAGJ,OAAQiQ,EAGN,sBAAKjQ,UAAWmL,KAAOjL,UAAvB,UACsB,qBAAf,OAAJsL,QAAI,IAAJA,OAAA,EAAAA,EAAMD,WAAqD,WAAf,OAAJC,QAAI,IAAJA,OAAA,EAAAA,EAAMD,WAC7C,oBAAGvL,UAAU,qCAAb,qBAAoDiQ,QAApD,IAAoDA,OAApD,EAAoDA,EAAOC,UAE7D,sBAAKlQ,UAAWmL,KAAOmP,MAAvB,UACE,mBAAGta,UAAU,yCAAb,SAAuDiQ,EAAM/O,OAC7D,cAAC,GAAD,CAAkB+O,MAAOA,IACzB,mBAAGjQ,UAAU,mCAAb,mDAEA,qBAAKA,UAAWmL,KAAOoP,iBAAvB,SACG/R,EAAYhC,KAAI,SAACsD,EAAYkI,GAAb,OACflI,EACE,cAAC,GAAD,CAAyCyP,qBAAsBzP,GAA7BkI,GAChC,UAIR,sBAAKhS,UAAWmL,KAAOqP,WAAvB,UACE,oBAAGxa,UAAU,kDAAb,UACGiQ,EAAMoH,UADT,cAGA,sBAAKrX,UAAWmL,KAAOM,MAAvB,UACE,mBAAGzL,UAAU,qCAAb,SAAmDiX,IACnD,cAAC,eAAD,CAActW,KAAK,wBAzB3B,cAAC0Z,EAAD,K,oBCrESI,GAA4B,SAAC,GAAkB,IAAhBzL,EAAe,EAAfA,SACpCgB,EAAWrG,KAMjB,OACE,sBAAK3J,UAAWmL,KAAOjL,UAAvB,UACE,sBAAKF,UAAWmL,KAAOuP,MAAvB,UACE,qBAAK1a,UAAU,QAAf,SACE,cAAC,IAAD,CACES,GAAG,WACHD,OAAK,EACLR,UAAU,uDACVU,gBAAgB,oBAJlB,0DASF,qBAAKV,UAAU,QAAf,SACE,cAAC,IAAD,CACES,GAAG,kBACHT,UAAU,uDACVU,gBAAgB,oBAHlB,qGAQF,qBAAKV,UAAU,QAAf,SACE,mBACEsL,QA5BK,WACb0E,GdkG4B,SAACA,GAC/B,MAIImE,GAAWc,QAHbH,EADF,EACEA,kCACAd,EAFF,EAEEA,kBACAgB,EAHF,EAGEA,uBAGMY,EAAcP,GAAUJ,QAAxBW,UAGR,OADA5F,EAASgE,KACFnM,IACJ3C,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MAAMF,EAAKG,QAAUH,EAAKG,QAAU,oIAEhDwK,EAAS8E,KACT9E,EAAS4F,QAEV/P,OAAM,SAACC,GACNkK,EAASgF,KACTjP,IAAMlB,MAAMiB,EAAIN,gBc3FVxF,UAAU,sEAFZ,8CAOF,oBAAGA,UAAU,2DAAb,0IAC2B,uBAD3B,gMAKF,qBAAKA,UAAWmL,KAAOwP,wBAAvB,SAAiD3L,Q,qBCpC1C4L,GAA4B,WACvC,MAA+EnR,IAC7E,SAACZ,GAAD,OAAuBA,EAAMoN,SADvBlO,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAAU/G,EAAzB,EAAyBA,KAAM8S,EAA/B,EAA+BA,kBAAmBE,EAAlD,EAAkDA,yBAI5CxN,EAAO+C,IAAY,SAACZ,GAAD,OAAuBA,EAAMwI,KAAK3K,QACrDsD,EAAaL,KAYbkR,EAAcC,uBAAY,WAC1BpU,IACFsD,EAAWoK,GAAsB1N,EAAKqB,QAClCrB,EAAKxF,MACP8I,EAAWsK,GAAqB5N,EAAKxF,UAGxC,CAAC8I,EAAYtD,IAEhB8D,qBAAU,WACRqQ,MACC,CAACA,IAaJ,OACE,uBAAM3E,SAZa,SAAChH,GACpBA,EAAEmD,iBAEF,IAAM3L,EAAO,CACXxF,KAAMA,EAAKU,MACXmG,MAAOA,EAAMnG,MACbqG,SAAUA,EAASrG,OAErBoI,EfgCsB,SAACtD,GAAD,OAAiB,SAACsJ,GAC1C,MAIImE,GAAWc,QAHbH,EADF,EACEA,kCACAd,EAFF,EAEEA,kBACAgB,EAHF,EAGEA,uBAGMW,EAAoCN,GAAUJ,QAA9CU,gCAGR,OADA3F,EAASgE,KACF9L,EAAkBxB,GACtBxB,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MAAMF,EAAKG,QAAUH,EAAKG,QAAU,oIAEhDwK,EAAS8E,KACT9E,EAAS2F,EAAgCtQ,IACzCU,IAAMT,QAAQ,kGAEfO,OAAM,SAACC,GACNkK,EAASgF,KACTjP,IAAMlB,MAAMiB,EAAIN,aerDPuV,CAAWrU,KAItB,UACE,qBAAK1G,UAAU,kCAAf,SACE,cAAC,QAAD,CACEW,KAAM,OACNiT,YAAa,qBACb4C,SAxCa,SAACtH,GACpBlF,EAAWsK,GAAqBpF,EAAEvC,OAAO/K,SAwCnCkS,KAAM,WACNlS,MAAOV,EAAKU,MACZV,KAAM,OACN2D,OAAO,EACP4P,UAAW,uCACX9I,KAAM,cAGV,qBAAK3L,UAAU,kCAAf,SACE,cAAC,QAAD,CACEW,KAAM,OACNiT,YAAa,iCACb4C,SAlDc,SAACtH,GACrBlF,EAAWoK,GAAsBlF,EAAEvC,OAAO/K,SAkDpCkS,KAAM,WACNlS,MAAOmG,EAAMnG,MACbV,KAAM,QACN2D,OAAO,EACP4P,UAAW,uCACX9I,KAAM,cAGV,qBAAK3L,UAAU,kCAAf,SACE,cAAC,QAAD,CACEW,KAAM,WACNiT,YAAa,uCACb4C,SA5DiB,SAACtH,GACxBlF,EAAWqK,GAAwBnF,EAAEvC,OAAO/K,SA4DtCkS,KAAM,WACNlS,MAAOqG,EAASrG,MAChBV,KAAM,WACN2D,OAAO,EACP4P,UAAW,uCACX9I,KAAM,cAGV,sBAAK3L,UAAWmL,KAAO6P,cAAvB,UACE,qBAAKhb,UAAU,yCAAyCsL,QAASuP,EAAjE,kDAGA,cAAC,SAAD,CAAQla,KAAK,UAAUgL,KAAK,SAA5B,SACIqI,EAAkC,gHAAd,8DAIzBE,GACC,mBAAGlU,UAAU,8BAAb,4NCzEOib,GA1BwB,WACrC,IAAMjL,EAAWrG,KAEjB,EAA6DF,IAC3D,SAACZ,GAAD,OAAuBA,EAAMiP,QADvBF,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,yBAGxBxP,EAAgBiB,IAAY,SAACZ,GAAD,OAAuBA,EAAML,eAAzDA,YACA9B,EAAS+C,IAAY,SAACZ,GAAD,OAAuBA,EAAMwI,QAAlD3K,KAWR,OATA8D,qBAAU,WAIR,OAHIhC,EAAYuH,QAAUrJ,GACxBsJ,EAAS+I,MAEJ,WACL/I,EAAS8I,SAEV,CAAC9I,EAAUxH,EAAa9B,IAGzB,qCACGqR,EAAiB,iIAAiC,cAAC,GAAD,CAAYH,OAAQA,IACtEI,GAA4B,0L,yBCrBtBkD,GAAuC,SAAC,GAA2B,IAAzBlM,EAAwB,EAAxBA,SAAamM,EAAW,mBAC7E,EAAiC1R,IAAY,SAACZ,GAAD,OAAuBA,EAAMwI,QAAlE3K,EAAR,EAAQA,KAAM8O,EAAd,EAAcA,eACRxF,EAAWrG,KACjB,EAAsCmC,oBAAS,GAA/C,mBAAOsP,EAAP,KAAqBC,EAArB,KACMrV,EAAUgF,cAShB,OAPAR,qBAAU,YACE,uCAAG,sBAAA7D,EAAA,sEACLqJ,EAASmF,MADJ,2CAAH,qDAGVmG,GAAOpW,MAAK,kBAAMmW,GAAc,QAC/B,CAACrL,EAAUhK,KAEToV,GAAgB5F,EACZ,KAIP,cAAC,IAAD,2BACM2F,GADN,IAEEI,OAAQ,gBAAGzQ,EAAH,EAAGA,SAAH,OACNpE,EACEsI,EAEA,cAAC,IAAD,CACEvO,GAAI,CACF8K,SAAU,SACV1C,MAAO,CAAE2C,KAAMV,W,gBC3BhB0Q,GAAwC,SAAC,GAA2B,IAAzBxM,EAAwB,EAAxBA,SAAamM,EAAW,mBAC9E,EAAiC1R,IAAY,SAACZ,GAAD,OAAuBA,EAAMwI,QAAlE3K,EAAR,EAAQA,KAAM8O,EAAd,EAAcA,eACRxF,EAAWrG,KACX3D,EAAUgF,cAChB,EAAsCc,oBAAS,GAA/C,mBAAOsP,EAAP,KAAqBC,EAArB,KASA,OAPA7Q,qBAAU,YACE,uCAAG,sBAAA7D,EAAA,sEACLqJ,EAASmF,MADJ,2CAAH,qDAGVmG,GAAOpW,MAAK,kBAAMmW,GAAc,QAC/B,CAACrL,EAAUhK,KAEToV,GAAgB5F,EACZ,KAIP,cAAC,IAAD,2BACM2F,GADN,IAEEI,OAAQ,cAAGzQ,SAAH,OACNpE,EACE,cAAC,IAAD,CACEjG,GAAI,CACF8K,SAAU,OAIdyD,O,oBClCGyM,GAAyD,4BACzDC,GAAuD,2BCUvDnT,GAAgD,CAC3DuB,WAAY,MC8CC6R,GAlDqB,WAClC,IAAM7Q,EAAWC,cACTS,GAASV,EAASjC,MAASiC,EAASjC,MAA2B,CAAE2C,KAAM,OAAvEA,KAEFwE,EAAWrG,KACTuQ,EAAON,cAAPM,GACFpQ,EAAaL,IAAY,SAACZ,GAAD,OAAuBA,EAAM+S,mBAAmB9R,cACzE+R,EAAiBpS,IAAY,SAACZ,GAAD,OAAuBA,EAAML,YAAYA,eAM5E,OAJAgC,qBAAU,WACRwF,EDH6B,SAACkK,GAAD,OAAgB,SAC/ClK,EACAoF,GAEA,IAAM5M,EAAc4M,IAAW5M,YAAYA,YAE3C,OADAwH,EAAS,CAAErP,KAAM+a,KACV,IAAIzV,SAA0B,SAACC,EAASE,GAC7C,IAAM0D,EAAatB,EAAYiF,MAAK,SAAC0E,GAAD,OAAOA,EAAEtH,MAAQqP,KACjDpQ,EACF5D,EAAQ4D,GAER1D,EAAO,8JAGRlB,MAAK,SAACG,GACL2K,EAAS,CAAErP,KAAM8a,GAA2B3R,WAAYzE,OAEzDQ,OAAM,SAACC,GACNC,IAAMlB,MAAMiB,EAAIN,aCfTsW,CAAkB5B,MAC1B,CAAClK,EAAUkK,EAAI2B,IAEVA,EAAe9L,OAElBjG,EAGH,qBAAK9J,UAAWmL,KAAOiF,UAAvB,SACE,sBAAKpQ,UAAWmL,KAAOmP,MAAvB,UACsB,OAAf,OAAJ9O,QAAI,IAAJA,OAAA,EAAAA,EAAMD,WAAoB,oBAAIvL,UAAU,QAAd,qHAC3B,qBAAKa,IAAKiJ,EAAWiS,YAAahb,IAAK+I,EAAW5I,OAClD,qBAAKlB,UAAU,8BAAf,SAA8C8J,EAAW5I,OACzD,qBAAKlB,UAAU,oBAAoBkL,MAAO,CAAE8Q,UAAW,SAAU1L,SAAU,IAA3E,SACGxG,EAAWmS,aACV,gIAEJ,sBAAKjc,UAAW,CAACmL,KAAO+Q,iBAAkB,oCAAoC9b,KAAK,KAAnF,UACE,sGAEE,mBAAGJ,UAAU,gCAAb,SAA8C8J,EAAWqS,cAE3D,wEAEE,mBAAGnc,UAAU,gCAAb,SAA8C8J,EAAWsS,cAE3D,kEAEE,mBAAGpc,UAAU,gCAAb,SAA8C8J,EAAWuS,SAE3D,0FAEE,mBAAGrc,UAAU,gCAAb,SAA8C8J,EAAWwS,2BA1BjE,mJAFA,6CCXWC,GAR8B,WAC3C,IAAMvW,EAAUgF,cAIhB,OAHIhF,EAAQ8E,UAAY9E,EAAQ8E,SAASjC,OACvC7C,EAAQxE,QAAR,2BAAqBwE,EAAQ8E,UAA7B,IAAuCjC,MAAO,QAEzC,M,SCqBI7C,GAAUwW,eA4HRC,OA1Hf,WACE,IAAMzM,EAAWrG,KAOjB,OALAa,qBAAU,WACRwF,GxCpBgC,SAACA,GACnC,MAII3H,EAAiB4M,QAHnBrM,EADF,EACEA,mBACAI,EAFF,EAEEA,sBACAD,EAHF,EAGEA,uBAIF,OADAiH,EAASjH,KACFX,IACJlD,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACL,IAAKA,EAAKC,QACR,MAAM,IAAIC,MAAM,oIAElByK,EAASpH,EAAmBvD,EAAKA,UAElCQ,OAAM,SAACC,GACNkK,EAAShH,KACTjD,IAAMlB,MAAMiB,EAAIN,ewCGlBwK,EAASmF,QACR,CAACnF,IAGF,sBAAKhQ,UAAU,MAAf,UACE,eAAC,IAAD,CAAQgG,QAASA,GAAjB,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiU,KAAK,IAAIzZ,OAAO,EAAvB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CACEyZ,KAAK,mBACLzZ,OAAO,EACP+a,OAAQ,YAAmC,IAAhCzQ,EAA+B,EAA/BA,SAAU9E,EAAqB,EAArBA,QACXwF,GADgC,EAAZlK,OACXwJ,EAASjC,MAASiC,EAASjC,MAA2B,CAAE2C,KAAM,OAAvEA,MACR,MAAuB,OAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMD,UAEN,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,CACEuD,MAAM,0GACNC,MAAM,EACNN,aAAc,kBAAMzI,EAAQ0W,UAH9B,SAKE,cAAC,GAAD,SAKD,cAAC,GAAD,OAGX,cAAC,GAAD,CAAiBzC,KAAK,SAASzZ,OAAO,EAAtC,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAiByZ,KAAK,YAAYzZ,OAAO,EAAzC,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAiByZ,KAAK,mBAAmBzZ,OAAO,EAAhD,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAiByZ,KAAK,kBAAkBzZ,OAAO,EAA/C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOyZ,KAAK,QAAQzZ,OAAO,EAA3B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CACEyZ,KAAK,kBACLzZ,OAAO,EACP+a,OAAQ,YAAmC,IAAhCzQ,EAA+B,EAA/BA,SAAU9E,EAAqB,EAArBA,QAAS1E,EAAY,EAAZA,MACpBkK,GAASV,EAASjC,MAASiC,EAASjC,MAA2B,CAAE2C,KAAM,OAAvEA,KACR,MAAuB,WAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMD,UAEN,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,CACEuD,MAAK,WAAMxN,EAAMqb,OAAOhD,UACxB5K,MAAM,EACNN,aAAc,kBAAMzI,EAAQ0W,UAH9B,SAKE,cAAC,GAAD,SAKD,cAAC,GAAD,OAGX,cAAC,GAAD,CAAgBzC,KAAK,WAArB,SACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOA,KAAK,WAAWzZ,OAAO,EAA9B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOyZ,KAAK,kBAAkBzZ,OAAO,EAArC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CACEyZ,KAAK,4BACLzZ,OAAO,EACP+a,OAAQ,YAAmC,IAAhCzQ,EAA+B,EAA/BA,SAAU9E,EAAqB,EAArBA,QAAS1E,EAAY,EAAZA,MACpBkK,GAASV,EAASjC,MACrBiC,EAASjC,MACV,CAAE2C,KAAM,OAFJA,KAGR,MAAuB,qBAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMD,UAEN,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,CACEuD,MAAK,WAAMxN,EAAMqb,OAAOhD,UACxB5K,MAAM,EACNN,aAAc,kBAAMzI,EAAQ0W,UAH9B,SAKE,cAAC,GAAD,SAKD,cAAC,GAAD,cAMjB,cAAC,IAAD,UACE,cAAC,GAAD,YAIN,cAAC,IAAD,QCtISE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5X,MAAK,YAAkD,IAA/C6X,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kCCADtU,GAAsC,CACjDC,YAAa,GACb2I,WAAY,GAGRiM,GAAsB,SAAC5U,GAC3B,OAAOA,EAAYkC,QAAO,SAAC2S,EAAK9O,GAC9B,OAAO8O,EAAM9O,EAAI9C,QAChB,ICZQlD,GAAgC,CAC3C0H,MAAO,CAAE/O,KAAM,GAAIgP,OAAQ,GAAInL,OAAQ,UAAWyD,YAAa,GAAI6O,UAAW,GAAIiG,UAAW,IAC7F7U,YAAY,EACZC,sBAAsB,GCDXH,GAA8C,CACzDuB,WAAY,MCIDyT,GAAcC,aAAgB,CACzChV,YAAaS,EACbc,kBHMgC,WAGL,IAF3BlB,EAE0B,uDAFlBN,GACRO,EAC0B,uCAC1B,OAAQA,EAAOnI,MACb,KAAKwI,GACH,IAAIsU,EAAiB,GACrB,GAAI3U,EAAOgB,WAAWnJ,OAAS0F,EAAiB0F,IAAK,CACnD,IAAM+D,EAAoBjH,EAAML,YAAY8F,QAC1C,SAACC,GAAD,OAASA,EAAI5N,OAAS0F,EAAiB0F,OAEzC0R,EAAc,CAAI3U,EAAOgB,YAAX,oBAA0BgG,GAA1B,CAA6ChH,EAAOgB,iBAC7D,CACL,IAAM4T,EAAM7U,EAAML,YAAYiF,MAAK,SAACc,GAAD,OAASA,EAAI5N,OAAS0F,EAAiB0F,OACpE+D,EAAoBjH,EAAML,YAAY8F,QAC1C,SAACC,GAAD,OAASA,EAAI5N,OAAS0F,EAAiB0F,OAEzC0R,EAAiBC,EAAG,CACfA,GADe,oBACP5N,GADO,CACYhH,EAAOgB,WAAY4T,IAD/B,uBAEZ5N,GAFY,CAEOhH,EAAOgB,aAEpC,OAAO,2BACFjB,GADL,IAEEL,YAAaiV,EACbtM,WAAYiM,GAAoBK,KAGpC,KAAKrU,GACH,IAAMqU,EAAiB5U,EAAML,YAAY8F,QAAO,SAACC,GAAD,OAASA,IAAQzF,EAAOgB,cACxE,OAAO,2BACFjB,GADL,IAEEL,YAAaiV,EACbtM,WAAYiM,GAAoBK,KAIpC,KAAKnU,GACH,OAAO,2BACFT,GADL,IAEEL,YAAa,GACb2I,WAAYiM,GAAoB,MAIpC,KAAK/T,GACH,IAAMoU,EAAc,aAAO5U,EAAML,aAC3BmV,EAASF,EAAeG,OAAO9U,EAAOgK,2BAA2BtH,KAAM,GAE7E,OADAiS,EAAeG,OAAO9U,EAAOgK,2BAA2BrS,GAAI,EAAGkd,EAAO,IAC/D,2BAAK9U,GAAZ,IAAmBL,YAAaiV,IAGlC,QACE,OAAO5U,IGzDXoH,MFJ0B,WAAmE,IAAlEpH,EAAiE,uDAAzDN,GAAcO,EAA2C,uCAC5F,OAAQA,EAAOnI,MACb,KAAK+O,GACH,OAAO,2BAAK7G,GAAZ,IAAmBJ,YAAY,EAAMC,sBAAsB,IAE7D,KAAKiH,GACH,OAAO,2BAAK9G,GAAZ,IAAmBoH,MAAOnH,EAAOmH,MAAOxH,YAAY,EAAOC,sBAAsB,IAEnF,KAAKkH,GAEH,OADA7J,IAAMlB,MAAMiE,EAAOtD,SACZ,2BAAKqD,GAAZ,IAAmBJ,YAAY,EAAOC,sBAAsB,IAE9D,QACE,OAAOG,IERX+S,mBRqBwC,WAGH,IAFrC/S,EAEoC,uDAF5BN,GACRO,EACoC,uCACpC,OAAQA,EAAOnI,MACb,KAAK8a,GACH,OAAO,2BAAK5S,GAAZ,IAAmBiB,WAAYhB,EAAOgB,aAExC,KAAK4R,GACH,OAAO,2BAAK7S,GAAZ,IAAmBiB,WAAY,OAEjC,QACE,OAAOjB,IQhCXuI,mBDNwC,WAGL,IAFnCvI,EAEkC,uDAF1BN,GACRO,EACkC,uCAClC,OAAQA,EAAOnI,MACb,KAAK4I,GACH,OAAO,2BAAKV,GAAZ,IAAmBiB,WAAYhB,EAAOgB,aAExC,KAAKN,GACH,OAAO,2BAAKX,GAAZ,IAAmBiB,WAAY,OAEjC,QACE,OAAOjB,ICLXoN,MAAOf,GACP4C,KAAMsB,GACN/H,KAAM0E,K,eChBK8H,GAAQC,YAAe,CAClC5U,QAASqU,GACTQ,WAAW,CCQJ,SAACF,GACN,IACIG,EADAC,EAA+B,KAGnC,OAAO,SAACC,GAAD,OAAoB,SAACpV,GAC1B,IAAQkH,EAAuB6N,EAAvB7N,SAAUoF,EAAayI,EAAbzI,SACVzU,EAASmI,EAATnI,KAEFqZ,EAAiB5E,IAAW5M,YAAYA,YAM9C,GAJI7H,IAASkY,GAAelY,MAAQqZ,EAAejK,SACjDkO,EAAa,IAAIE,UhDdC,+CgDiBhBxd,IAASoY,GAAiBpY,MAAQqZ,EAAejK,OAAQ,CAC3D,IAAMrK,EAAczE,EAAU,eAC9Bgd,EAAa,IAAIE,UAAJ,UhDlBO,yCgDkBP,kBAAuCzY,IAGlDuY,IACFA,EAAWG,UAAY,SAAC1R,GACtB,IAAQrH,EAASqH,EAATrH,KACFgZ,EAAajX,KAAKkX,MAAMjZ,GACVkZ,GAAmBF,EAA/B/Y,QAAR,aAAuC+Y,EAAvC,KACMzG,EAA2B2G,EAAe3G,OAC1C4G,EAA6B5G,EAAO7H,OAAS6H,EAChD6G,MAAK,SAAC9X,EAAGuQ,GAAJ,OAAUjV,KAAKqc,MAAMpH,EAAEoG,WAAarb,KAAKqc,MAAM3X,EAAE2W,cACtD9W,KAAI,SAACkY,GACJ,IAAMlW,EAAkCkW,EAAIlW,YACzChC,KAAI,SAAC+H,GAAD,OAASyL,EAAevM,MAAK,SAACkR,GAAD,OAAQA,EAAG9T,MAAQ0D,QACpDD,QAAO,SAACC,GAAD,YAAiB7M,IAAR6M,KACnB,OAAO,2BACFmQ,GADL,IAEExO,OAAQwO,EAAIxO,OAAO0O,WACnBpW,cACA6O,UAAWhU,EAAmBqb,EAAIrH,gBAEjC,GACPrH,EAAS4I,GAAY,2BAAK2F,GAAN,IAAsB3G,OAAQ4G,OAGpDP,EAAWY,OAAS,WAClBb,EAAec,aAAY,WAAO,IAAD,EACG,EAAH,KAAjB,QAAV,EAAAb,SAAA,eAAYc,cACJ,QAAV,EAAAd,SAAA,SAAYe,KAAK,WAElB,MAGLf,EAAWgB,QAAU,WACnBC,cAAclB,IAGZrd,IAASmY,GAAgBnY,MAAQsd,GACnCA,EAAWhP,SAGfiP,EAAKpV,ODjEC,oBAA0BqW,gBACpCC,UAAUC,IEEZhQ,IAASkM,OACP,cAAC,KAAD,CAAUsC,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFzc,SAASwN,eAAe,SAM1BgO,M,mBClBA/c,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,2BAA6B,+CAA+C,qBAAuB,yCAAyC,MAAQ,0BAA0B,kBAAoB,sCAAsC,wBAA0B,4CAA4C,YAAc,kC,mBCA9UD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,kBAAoB,yCAAyC,iBAAmB,wCAAwC,qBAAuB,4CAA4C,+BAAiC,sDAAsD,MAAQ,+B,mBCAzVD,EAAOC,QAAU,CAAC,UAAY,uCAAuC,MAAQ,mCAAmC,iBAAmB,8CAA8C,WAAa,wCAAwC,MAAQ,qC,mBCA9OD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,eAAiB,qCAAqC,aAAe,mCAAmC,sBAAwB,8C,mBCA9LD,EAAOC,QAAU,CAAC,UAAY,mDAAmD,iBAAmB,0DAA0D,WAAa,oDAAoD,aAAe,wD,mBCA9OD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,uBAAuB,wBAA0B,2C,mBCAlHD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,MAAQ,8BAA8B,iBAAmB,2C,mBCAzHD,EAAOC,QAAU,CAAC,YAAc,2BAA2B,QAAU,uBAAuB,cAAgB,gC","file":"static/js/main.1a3efab0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"modal-overlay_Backdrop__2lat4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"order-details_Container__kI9_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor_element_container\":\"ingredient-in-constructor_constructor_element_container__1SMyb\",\"reorder_placeholder\":\"ingredient-in-constructor_reorder_placeholder__35QKy\",\"reorder_placeholder_hover\":\"ingredient-in-constructor_reorder_placeholder_hover__1yHIh\",\"drag_placeholder\":\"ingredient-in-constructor_drag_placeholder__2oT89\",\"drag_placeholder_opened\":\"ingredient-in-constructor_drag_placeholder_opened__UVYZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main-page_container__35T_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-list_container__22cAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed-list_container__14RmR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"feed_main_container__3vc46\",\"container\":\"feed_container__3Zlhe\",\"title\":\"feed_title__yRxeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container_500\":\"profile-user-data_input_container_500__2bBYr\",\"input__container\":\"profile-user-data_input__container__2EJhm\",\"input_size_default\":\"profile-user-data_input_size_default__25RmD\",\"cancel_submit\":\"profile-user-data_cancel_submit__50GrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-constructor_container__332QY\",\"final_price\":\"burger-constructor_final_price__3z6n3\",\"ingredients_scrollable_container\":\"burger-constructor_ingredients_scrollable_container__2ywl-\",\"on_drag_ready\":\"burger-constructor_on_drag_ready__390b6\",\"on_drag_hover\":\"burger-constructor_on_drag_hover__1uM1r\",\"scrollbar_appeared\":\"burger-constructor_scrollbar_appeared__2Wv0h\",\"empty_dropzone\":\"burger-constructor_empty_dropzone__Z0ITP\",\"fake_ingredient\":\"burger-constructor_fake_ingredient__2eFZ3\",\"drop_sign\":\"burger-constructor_drop_sign__2N0Qp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app-header_container__2ER_-\",\"desktop_header\":\"app-header_desktop_header__3_4pU\",\"mobile_header\":\"app-header_mobile_header__2LUzU\",\"menu_desktop\":\"app-header_menu_desktop__1o6gr\",\"menu_item\":\"app-header_menu_item__2bIm7\"};","export default __webpack_public_path__ + \"static/media/logo.b285bee5.svg\";","export default __webpack_public_path__ + \"static/media/mobile_menu_opener.579cc8f6.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  BurgerIcon,\n  ListIcon,\n  Logo,\n  ProfileIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport headerStyles from './app-header.module.css';\nimport LogoSmall from '../../images/logo.svg';\nimport MobileMenuOpener from '../../images/mobile_menu_opener.svg';\n\nconst AppHeader: React.FC = () => {\n  return (\n    <header>\n      <nav\n        className={[\n          headerStyles.container,\n          headerStyles.desktop_header,\n          'text text_type_main-default',\n        ].join(' ')}\n      >\n        <ul className={headerStyles.menu_desktop}>\n          <li className={headerStyles.menu_item}>\n            <NavLink\n              data-testid=\"constructor-link\"\n              exact\n              to=\"/\"\n              className=\"link text text_type_main-default text_color_inactive\"\n              activeClassName=\"text_color_active\"\n            >\n              <BurgerIcon type=\"primary\" />\n              <span className=\"ml-1\">Конструктор</span>\n            </NavLink>\n          </li>\n          <li className={headerStyles.menu_item}>\n            <NavLink\n              data-testid=\"feed-link\"\n              to=\"/feed\"\n              className=\"link text text_type_main-default text_color_inactive\"\n              activeClassName=\"text_color_active\"\n            >\n              <ListIcon type=\"primary\" />\n              <span className=\"ml-1\">Лента заказов</span>\n            </NavLink>\n          </li>\n        </ul>\n\n        <NavLink to=\"/\">\n          <Logo />\n        </NavLink>\n\n        <ul className={headerStyles.menu_desktop}>\n          <li className={headerStyles.menu_item}>\n            <NavLink\n              data-testid=\"cabinet-link\"\n              to=\"/profile\"\n              className=\"link text text_type_main-default text_color_inactive\"\n              activeClassName=\"text_color_active\"\n            >\n              <ProfileIcon type=\"primary\" />\n              <span className=\"ml-1\">Личный кабинет</span>\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n      <nav\n        className={[\n          headerStyles.container,\n          headerStyles.mobile_header,\n          'text text_type_main-default mobile_header pr-1 pl-1',\n        ].join(' ')}\n      >\n        <img src={LogoSmall} alt=\"\" />\n        <img src={MobileMenuOpener} alt=\"\" />\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import moment from 'moment';\nimport 'moment/locale/ru';\n\nexport function getCookie(name) {\n  const matches = document.cookie.match(\n    // eslint-disable-next-line\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)'),\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport function setCookie(name, value, props) {\n  props = props || {};\n  let exp = props.expires;\n  if (typeof exp == 'number' && exp) {\n    const d = new Date();\n    d.setTime(d.getTime() + exp * 1000);\n    exp = props.expires = d;\n  }\n  if (exp && exp.toUTCString) {\n    props.expires = exp.toUTCString();\n  }\n  value = encodeURIComponent(value);\n  let updatedCookie = name + '=' + value;\n  for (const propName in props) {\n    updatedCookie += '; ' + propName;\n    const propValue = props[propName];\n    if (propValue !== true) {\n      updatedCookie += '=' + propValue;\n    }\n  }\n  updatedCookie += '; path=/;';\n  document.cookie = updatedCookie;\n}\n\nexport function deleteCookie(name) {\n  setCookie(name, null, { expires: -1 });\n}\n\nexport function saveToLocalStorage(name, value) {\n  localStorage.setItem(name, value);\n}\n\nexport function getFromLocalStorage(name) {\n  return localStorage.getItem(name);\n}\n\nexport function removeFromLocalStorage(name) {\n  localStorage.removeItem(name);\n}\n\nexport const getTokenFromPayload = (payload) => {\n  return payload && payload.indexOf('Bearer') === 0 ? payload.split('Bearer ')[1] : payload;\n};\n\nexport const dateToFromNowDaily = (myDate) => {\n  let fromNow = moment(myDate).fromNow();\n  const mom = moment(myDate);\n  return mom.locale('ru').calendar(null, {\n    lastWeek: '[Прошлый] dddd, H:mm',\n    lastDay: '[Вчера], H:mm',\n    sameDay: '[Сегодня], H:mm',\n    nextDay: '[Завтра], H:mm',\n    nextWeek: 'dddd, H:mm',\n    sameElse: function () {\n      return '[' + fromNow + ']';\n    },\n  });\n};\n","import axios from 'axios';\nimport {\n  deleteCookie,\n  getCookie,\n  getTokenFromPayload,\n  removeFromLocalStorage,\n  saveToLocalStorage,\n  setCookie,\n} from './utils';\nimport { refreshTokenRequest } from './api';\nimport { toast } from 'react-toastify';\nimport { history } from '../components/app/app';\n\nlet isRefreshing = false;\nlet refreshSubscribers = [];\n\nconst http = axios.create();\nhttp.defaults.headers.common = { Authorization: `Bearer ${getCookie('accessToken')}` };\n\nhttp.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const {\n      config,\n      response: { status },\n    } = error;\n    const originalRequest = config;\n\n    if (status === 401 || status === 403) {\n      if (!isRefreshing) {\n        isRefreshing = true;\n        refreshTokenRequest()\n          .then((resp) => resp.json())\n          .then((data) => {\n            if (!data.success) {\n              throw new Error(\n                data.message ? data.message : 'Refresh токен просрочен или не настоящий',\n              );\n            }\n            const token = getTokenFromPayload(data.accessToken);\n            setCookie('accessToken', token);\n            saveToLocalStorage('refreshToken', data.refreshToken);\n            isRefreshing = false;\n            onRrefreshed(token);\n          })\n          .catch((err) => {\n            toast.error(err.message);\n            removeFromLocalStorage('refreshToken');\n            deleteCookie('accessToken');\n            history.replace('/login');\n          });\n      }\n\n      return new Promise((resolve) => {\n        subscribeTokenRefresh((token) => {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          resolve(axios(originalRequest));\n        });\n      });\n    } else {\n      return Promise.reject(error);\n    }\n  },\n);\n\nconst subscribeTokenRefresh = (cb) => {\n  refreshSubscribers.push(cb);\n};\n\nconst onRrefreshed = (token) => {\n  refreshSubscribers.map((cb) => cb(token));\n};\n\nexport default http;\n","export interface IIngredientModel {\n  _id: string;\n  name: string;\n  type: string;\n  proteins: number;\n  fat: number;\n  carbohydrates: number;\n  calories: number;\n  price: number;\n  image: string;\n  image_mobile: string;\n  image_large: string;\n  description?: string;\n  __v: number;\n}\n\nexport enum EIngredientTypes {\n  Bun = 'bun',\n  Sause = 'sauce',\n  Main = 'main',\n}\n\nexport interface IIngredientWithAmount {\n  ingredient: IIngredientModel;\n  amount: number;\n}\n","import {\n  createUserApiUrl,\n  getUserApiUrl,\n  ingredientsApiUrl,\n  loginUserApiUrl,\n  logoutUserApiUrl,\n  orderApiUrl,\n  passwordResetApiUrl,\n  passwordResetRequestApiUrl,\n  refreshTokenApiUrl,\n  updateUserApiUrl,\n} from './apiURLs';\nimport { IUser } from '../models/user';\nimport { getFromLocalStorage } from './utils';\nimport http from './http';\n\nexport const registerRequest = async (user: IUser) => {\n  return await fetch(createUserApiUrl, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(user),\n  });\n};\n\nexport const loginRequest = async (user: IUser) => {\n  return await fetch(loginUserApiUrl, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(user),\n  });\n};\n\nexport const getUserRequest = async () => await http.get(getUserApiUrl).then((res) => res.data);\nexport const placeOrderRequest = async (dataToPost: Object) =>\n  await http.post(orderApiUrl, dataToPost).then((res) => res.data);\n\nexport const logoutRequest = async () => {\n  return await fetch(logoutUserApiUrl, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify({ token: getFromLocalStorage('refreshToken') }),\n  });\n};\n\nexport const refreshTokenRequest = async () => {\n  return await fetch(refreshTokenApiUrl, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify({ token: getFromLocalStorage('refreshToken') }),\n  });\n};\n\nexport const passwordResetRequest = async (email: string) => {\n  return await fetch(passwordResetRequestApiUrl, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify({\n      email: email,\n    }),\n  });\n};\n\nexport const doPasswordResetRequest = async (password: string, token: string) => {\n  return await fetch(passwordResetApiUrl, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify({\n      password,\n      token,\n    }),\n  });\n};\n\nexport const updateUserRequest = async (user: IUser) =>\n  await http.patch(updateUserApiUrl, JSON.stringify(user)).then((res) => res.data);\n\nexport const getIngredientsRequest = async () =>\n  await fetch(ingredientsApiUrl, {\n    method: 'GET',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n  });\n","export const ingredientsApiUrl = 'https://norma.nomoreparties.space/api/ingredients';\nexport const orderApiUrl = 'https://norma.nomoreparties.space/api/orders';\nexport const createUserApiUrl = 'https://norma.nomoreparties.space/api/auth/register';\nexport const loginUserApiUrl = 'https://norma.nomoreparties.space/api/auth/login';\nexport const logoutUserApiUrl = 'https://norma.nomoreparties.space/api/auth/logout';\nexport const refreshTokenApiUrl = 'https://norma.nomoreparties.space/api/auth/token';\nexport const getUserApiUrl = 'https://norma.nomoreparties.space/api/auth/user';\nexport const updateUserApiUrl = 'https://norma.nomoreparties.space/api/auth/user';\nexport const passwordResetRequestApiUrl = 'https://norma.nomoreparties.space/api/password-reset';\nexport const passwordResetApiUrl = 'https://norma.nomoreparties.space/api/password-reset/reset';\n\nexport const wssFeedUrl = 'wss://norma.nomoreparties.space/orders/all';\nexport const wssMyFeedUrl = 'wss://norma.nomoreparties.space/orders';\n","import { IIngredientModel } from '../../../models/ingredient-model';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { Reducer } from 'redux';\nimport { getIngredientsRequest } from '../../../utils/api';\nimport { TAppDispatch } from '../../types/app-dispatch';\nimport { TIngredientsSliceActionsType, TIngredientsStateType } from './types';\n\n\nexport const initialState: TIngredientsStateType = {\n  ingredients: [],\n  isFetching: false,\n  isErrorWhileFetching: false,\n};\n\nexport const getIngredients = () => (dispatch: TAppDispatch) => {\n  const {\n    ingredientsFetched,\n    ingredientsFetchError,\n    ingredientsAreFetching,\n  } = ingredientsSlice.actions;\n\n  dispatch(ingredientsAreFetching());\n  return getIngredientsRequest()\n    .then((resp) => resp.json())\n    .then((data) => {\n      if (!data.success) {\n        throw new Error('Ошибка получения данных');\n      }\n      dispatch(ingredientsFetched(data.data));\n    })\n    .catch((err) => {\n      dispatch(ingredientsFetchError());\n      toast.error(err.message);\n    });\n};\n\nexport const ingredientsSlice = createSlice({\n  name: 'ingredients',\n  initialState,\n  reducers: {\n    ingredientsFetched(\n      state: TIngredientsStateType,\n      action: PayloadAction<IIngredientModel[]>,\n    ): void {\n      state.isFetching = false;\n      state.isErrorWhileFetching = false;\n      state.ingredients = action.payload;\n    },\n    ingredientsAreFetching(state: TIngredientsStateType): void {\n      state.isFetching = true;\n      state.isErrorWhileFetching = false;\n    },\n    ingredientsFetchError(state: TIngredientsStateType): void {\n      state.isFetching = false;\n      state.isErrorWhileFetching = true;\n      state.ingredients = [];\n    },\n  },\n});\n\nexport const ingredientsSliceReducer = ingredientsSlice.reducer as Reducer<\n  TIngredientsStateType,\n  TIngredientsSliceActionsType\n>;\n","export const ADD_INGREDIENT_TO_CONSTRUCTOR: 'ADD_INGREDIENT_TO_CONSTRUCTOR' =\n  'ADD_INGREDIENT_TO_CONSTRUCTOR';\nexport const REMOVE_INGREDIENT_FROM_CONSTRUCTOR: 'REMOVE_INGREDIENT_FROM_CONSTRUCTOR' =\n  'REMOVE_INGREDIENT_FROM_CONSTRUCTOR';\nexport const WRAP_INGREDIENTS_IN_CONSTRUCTOR: 'WRAP_INGREDIENTS_IN_CONSTRUCTOR' =\n  'WRAP_INGREDIENTS_IN_CONSTRUCTOR';\nexport const CLEAR_CONSTRUCTOR: 'CLEAR_CONSTRUCTOR' = 'CLEAR_CONSTRUCTOR';\n","export const SET_INGREDIENT_DRAGGING: 'SET_INGREDIENT_DRAGGING' = 'SET_INGREDIENT_DRAGGING';\nexport const CLEAR_INGREDIENT_DRAGGING: 'CLEAR_INGREDIENT_DRAGGING' = 'CLEAR_INGREDIENT_DRAGGING';\n","import {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook\n} from 'react-redux';\nimport { TRootState } from '../services/reducers';\nimport { TAppDispatch } from '../services/types/app-dispatch';\nimport { Action, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { TIngredientsReducerActionsType } from '../services/reducers/burger-constructor/types';\nimport { TIngredientsDetailViewActions } from '../services/reducers/ingredient-detail/types';\nimport { TIngredientDraggingActions } from '../services/reducers/ingredient-dragging/types';\nimport { TOrderActions } from '../services/reducers/order/types';\nimport { TAuthSliceActionsType } from '../services/slices/auth/auth';\nimport { TFeedSliceActionsType } from '../services/slices/feed/types';\nimport { TIngredientsSliceActionsType } from '../services/slices/ingredients/types';\nimport { TLoginSliceActionsType } from '../services/slices/login/types';\n\n\nexport type TApplicationActions = TIngredientsReducerActionsType |\n  TIngredientsDetailViewActions |\n  TIngredientDraggingActions |\n  TOrderActions |\n  TAuthSliceActionsType |\n  TFeedSliceActionsType |\n  TIngredientsSliceActionsType |\n  TLoginSliceActionsType\n  ;\n\nexport type TAppThunk<TReturn = void> = ActionCreator<\n  ThunkAction<TReturn, Action, TRootState, TApplicationActions>\n  >;\n\nexport const useSelector: TypedUseSelectorHook<TRootState> = selectorHook;\n\nexport const useDispatch = () => dispatchHook<TAppDispatch | TAppThunk>();","import React, { useEffect } from 'react';\nimport { IIngredientModel } from '../../models/ingredient-model';\nimport styles from './ingredient.module.css';\nimport {\n  CheckMarkIcon,\n  Counter,\n  CurrencyIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDrag } from 'react-dnd';\nimport { TRootState } from '../../services/reducers';\nimport { ADD_INGREDIENT_TO_CONSTRUCTOR } from '../../services/actions/burger-constructor';\nimport {\n  CLEAR_INGREDIENT_DRAGGING,\n  SET_INGREDIENT_DRAGGING,\n} from '../../services/actions/ingredient-dragging';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst Ingredient = ({ ingredient }: { ingredient: IIngredientModel }) => {\n  const ingredients = useSelector((state: TRootState) => state.burgerConstructor.ingredients);\n  const dispatcher = useDispatch();\n\n  const [{ opacity, isDragging }, dragRef] = useDrag({\n    type: 'ingredients',\n    item: ingredient,\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.3 : 1,\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  useEffect(() => {\n    dispatcher({\n      type: isDragging ? SET_INGREDIENT_DRAGGING : CLEAR_INGREDIENT_DRAGGING,\n      ingredient: ingredient,\n    });\n  }, [isDragging, ingredient, dispatcher]);\n\n  const increaseAmount = (): void => {\n    dispatcher({ type: ADD_INGREDIENT_TO_CONSTRUCTOR, ingredient: { ...ingredient } });\n  };\n\n  const amount = (): number => {\n    return ingredients.reduce((accumulator, currentValue) => {\n      return currentValue._id === ingredient._id ? accumulator + 1 : accumulator;\n    }, 0);\n  };\n\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <div\n      ref={dragRef}\n      style={{ opacity }}\n      className={[styles.ingredient_container, 'mt-2 text text_type_main-default'].join(' ')}\n    >\n      <img\n        src={ingredient.image_mobile}\n        alt=\"\"\n        onClick={() =>\n          history.push({ pathname: `/ingredients/${ingredient._id}`, state: { from: location } })\n        }\n      />\n      <div className={[styles.price, 'text text_type_digits-default'].join(' ')}>\n        <span className=\"mr-1\">{ingredient.price}</span>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n      <p className=\"title\">{ingredient.name}</p>\n      {amount() > 0 && <Counter count={amount()} size=\"small\" />}\n\n      <div className={styles.DetailPopup} onClick={increaseAmount}>\n        <CheckMarkIcon type=\"success\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Ingredient;\n","import React, { useState, useRef, RefObject, useEffect } from 'react';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { EIngredientTypes } from '../../models/ingredient-model';\nimport Ingredient from '../ingredient/ingredient';\nimport styles from '../ingredient/ingredient.module.css';\nimport { useSelector } from 'react-redux';\nimport { TRootState } from '../../services/reducers';\n\nconst BurgerIngredients: React.FC = () => {\n  const { ingredients, isFetching, isErrorWhileFetching } = useSelector(\n    (state: TRootState) => state.ingredients,\n  );\n\n  const [currentIngredientType, setCurrentIngredientType] = useState<string>(EIngredientTypes.Bun);\n\n  let ingredientsTypes = [\n    {\n      type: EIngredientTypes.Bun,\n      name: 'Булки',\n      headerRef: useRef<HTMLDivElement>(null),\n      offsetTop: 999,\n    },\n    {\n      type: EIngredientTypes.Sause,\n      name: 'Соусы',\n      headerRef: useRef<HTMLDivElement>(null),\n      offsetTop: 999,\n    },\n    {\n      type: EIngredientTypes.Main,\n      name: 'Начинки',\n      headerRef: useRef<HTMLDivElement>(null),\n      offsetTop: 999,\n    },\n  ];\n\n  const ingredsContainer = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleScroll = (event: Event) => {\n      const { target } = event;\n      if (target) {\n        const scrollTop = (target as HTMLDivElement).scrollTop;\n\n        const closest = {\n          type: ingredientsTypes[0].type,\n          offsetTop: ingredientsTypes[0].offsetTop,\n        };\n        ingredientsTypes.forEach((it) => {\n          if (it.headerRef.current && it.headerRef.current.parentElement) {\n            const offsetTop = Math.abs(\n              it.headerRef.current.offsetTop -\n                it.headerRef.current.parentElement.offsetTop -\n                scrollTop,\n            );\n            if (offsetTop <= closest.offsetTop) {\n              closest.type = it.type;\n              closest.offsetTop = offsetTop;\n            }\n          }\n        });\n        setCurrentIngredientType(closest.type);\n      }\n    };\n\n    const scrollableElement = ingredsContainer.current;\n    if (scrollableElement) {\n      scrollableElement.addEventListener('scroll', handleScroll);\n    }\n    return () => {\n      if (scrollableElement) {\n        scrollableElement.removeEventListener('scroll', handleScroll);\n      }\n    };\n  });\n\n  const setCurrentTab = (cur: string) => {\n    setCurrentIngredientType(cur);\n\n    const it = ingredientsTypes.find((ingT) => ingT.type === cur);\n    if (it) {\n      const ref: RefObject<HTMLDivElement> = it.headerRef;\n      const currentElement: HTMLElement | null = ref.current;\n      if (currentElement) {\n        currentElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start',\n        });\n      }\n    }\n  };\n\n  return isFetching ? (\n    <h1>Loading...</h1>\n  ) : isErrorWhileFetching ? (\n    <div>Error while loading</div>\n  ) : (\n    <section className={styles.ingredients_list_container}>\n      <div className=\"text text_type_main-medium mb-3 p-1\">Соберите бургер</div>\n      <div style={{ display: 'flex' }}>\n        {ingredientsTypes.map((ingredientsType) => (\n          <Tab\n            key={ingredientsType.type}\n            value={ingredientsType.type}\n            active={currentIngredientType === ingredientsType.type}\n            onClick={setCurrentTab}\n          >\n            {ingredientsType.name}\n          </Tab>\n        ))}\n      </div>\n      <div className={styles.ingredients_panel} ref={ingredsContainer}>\n        {ingredientsTypes.map((ingredientsType) => (\n          <React.Fragment key={ingredientsType.type}>\n            <div\n              ref={ingredientsType.headerRef}\n              className={[\n                styles.ingredients_panel_title,\n                'text text_type_main-medium mb-3 p-1',\n              ].join(' ')}\n            >\n              {ingredientsType.name}\n            </div>\n            {ingredients\n              .filter((ing) => ing.type === ingredientsType.type)\n              .map((ing) => (\n                <Ingredient key={ing._id} ingredient={ing} />\n              ))}\n          </React.Fragment>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default BurgerIngredients;\n","import styles from './modal-overlay.module.css';\nimport { MouseEventHandler } from 'react';\n\nconst ModalOverlay = ({ onCloseClick }: { onCloseClick: MouseEventHandler<HTMLDivElement> }) => {\n  return <div className={styles.Backdrop} onClick={onCloseClick}></div>;\n};\n\nexport default ModalOverlay;\n","import React, { ReactChild, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './modal.module.css';\nimport ModalOverlay from '../modal-overlay/modal-overlay';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nconst modalRoot = document.getElementById('modals-container') as HTMLElement;\n\nconst Modal = ({\n  title,\n  show,\n  children,\n  onCloseClick,\n}: {\n  title?: string;\n  show?: boolean;\n  children: ReactChild;\n  onCloseClick: () => void;\n}) => {\n  useEffect(() => {\n    const close = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onCloseClick();\n      }\n    };\n    window.addEventListener('keydown', close);\n    return () => window.removeEventListener('keydown', close);\n  }, [onCloseClick]);\n\n  if (!show) {\n    return null;\n  }\n\n  const onclick = (e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n  };\n\n  return ReactDOM.createPortal(\n    <>\n      <div\n        className={[styles.ModalWindow, 'text text_type_main-default'].join(' ')}\n        onClick={onclick}\n      >\n        <div className={styles.TitleAndClose}>\n          <span className=\"text text_type_main-medium\">{title}</span>\n          <CloseIcon type=\"primary\" onClick={onCloseClick} />\n        </div>\n        {children}\n      </div>\n      <ModalOverlay onCloseClick={onCloseClick} />\n    </>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/order_placed.ad0297df.svg\";","import { IIngredientModel } from '../../models/ingredient-model';\nimport { placeOrderRequest } from '../../utils/api';\nimport { CLEAR_CONSTRUCTOR } from './burger-constructor';\nimport { TAppDispatch } from '../types/app-dispatch';\n\nexport const ORDER_IS_PROCESSING: 'ORDER_IS_PROCESSING' = 'ORDER_IS_PROCESSING';\nexport const ORDER_COMPLETED: 'ORDER_COMPLETED' = 'ORDER_COMPLETED';\nexport const ORDER_PROCESS_FAILED: 'ORDER_PROCESS_FAILED' = 'ORDER_PROCESS_FAILED';\n\nexport const placeOrder = (chosenIngredients: IIngredientModel[]) => (dispatch: TAppDispatch) => {\n  const dataToPost = {\n    ingredients: chosenIngredients.map((ingredient) => ingredient._id) as string[],\n  };\n\n  dispatch({\n    type: ORDER_IS_PROCESSING,\n  });\n\n  return placeOrderRequest(dataToPost)\n    .then((data) => {\n      if (!data.success) {\n        throw new Error('Ошибка получения данных');\n      }\n      dispatch({\n        type: ORDER_COMPLETED,\n        order: {\n          name: data.name,\n          number: data.order.number,\n          ingredients: dataToPost,\n        },\n      });\n\n      dispatch({ type: CLEAR_CONSTRUCTOR });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ORDER_PROCESS_FAILED,\n        message: err.message,\n      });\n    });\n};\n","import React, { useEffect } from 'react';\nimport styles from './order-details.module.css';\nimport OrderPlacedImage from '../../images/order_placed.svg';\nimport { TRootState } from '../../services/reducers';\nimport { placeOrder } from '../../services/actions/order';\nimport Loader from 'react-loader-spinner';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst OrderDetails: React.FC = () => {\n  const dispatcher = useDispatch();\n  const chosenIngredients = useSelector((state: TRootState) => state.burgerConstructor.ingredients);\n\n  useEffect(() => {\n    if (chosenIngredients.length) {\n      dispatcher(placeOrder(chosenIngredients));\n    }\n  }, [dispatcher, chosenIngredients]);\n\n  const { order, isFetching } = useSelector((state: TRootState) => state.order);\n\n  return (\n    <div className={styles.Container}>\n      {order.number && !isFetching ? (\n        <>\n          <p className=\"text text_type_digits-large mt-2 glow_text\">{order.number}</p>\n          <p className=\"text text_type_main-medium mt-3 mb-5\">идентификатор заказа</p>\n\n          <img src={OrderPlacedImage} alt=\"\" />\n\n          <p className=\"text text_type_main-medium mt-5 \" style={{ fontSize: 14 }}>\n            Ваш заказ начали готовить\n          </p>\n          <p className=\"text text_type_main-medium mt-2 mb-5 gray_text\" style={{ fontSize: 14 }}>\n            Дождитесь готовности на орбитальной станции\n          </p>\n        </>\n      ) : (\n        <>\n          <p className=\"text text_type_digits-medium mt-2 mb-15 glow_text\">Обработка заказа...</p>\n          <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={100} width={100} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default OrderDetails;\n","import { IIngredientModel } from '../../models/ingredient-model';\nimport styles from './ingredient-in-constructor.module.css';\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { REMOVE_INGREDIENT_FROM_CONSTRUCTOR } from '../../services/actions/burger-constructor';\nimport React from 'react';\nimport { SortableElement } from 'react-sortable-hoc';\nimport { useDispatch } from '../../utils/hooks';\n\nconst IngredientInConstructor = SortableElement(\n  ({ ingredient }: { ingredient: IIngredientModel }) => {\n    const dispatcher = useDispatch();\n\n    return (\n      <div className={[styles.constructor_element_container, 'mt-1'].join(' ')}>\n        <DragIcon type=\"primary\" />\n        <ConstructorElement\n          thumbnail={ingredient.image_mobile}\n          text={ingredient.name}\n          price={ingredient.price}\n          handleClose={() => dispatcher({ type: REMOVE_INGREDIENT_FROM_CONSTRUCTOR, ingredient })}\n        />\n      </div>\n    );\n  },\n);\n\nexport default IngredientInConstructor;\n","import {\n  Button,\n  ConstructorElement,\n  CurrencyIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { useMemo, useState } from 'react';\nimport { IIngredientModel, EIngredientTypes } from '../../models/ingredient-model';\nimport styles from './burger-constructor.module.css';\nimport Modal from '../modal-window/modal';\nimport OrderDetails from '../order-details/order-details';\nimport { toast } from 'react-toastify';\nimport { TRootState } from '../../services/reducers';\nimport {\n  ADD_INGREDIENT_TO_CONSTRUCTOR,\n  WRAP_INGREDIENTS_IN_CONSTRUCTOR,\n} from '../../services/actions/burger-constructor';\nimport { useDrop } from 'react-dnd';\nimport IngredientInConstructor from '../ingredient-in-constructor/ingredient-in-constructor';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst BurgerConstructor: React.FC = () => {\n  const [orderCompleted, setOrderCompleted] = useState<boolean>(false);\n  const { ingredients, finalPrice } = useSelector((state: TRootState) => state.burgerConstructor);\n  const draggingIngredient = useSelector(\n    (state: TRootState) => state.draggingIngredient.ingredient,\n  );\n  const dispatcher = useDispatch();\n  const user = useSelector((state: TRootState) => state.auth.user);\n  const history = useHistory();\n  const location = useLocation();\n\n  const [{ isHover }, dropTarget] = useDrop({\n    accept: 'ingredients',\n    drop(ingredient: IIngredientModel) {\n      dispatcher({ type: ADD_INGREDIENT_TO_CONSTRUCTOR, ingredient: { ...ingredient } });\n    },\n    collect: (monitor) => ({\n      isHover: monitor.isOver(),\n    }),\n  });\n\n  const placeOrder = (): void => {\n    if (!ingredients.find((ing) => ing.type === EIngredientTypes.Bun)) {\n      toast.warn('Заказ не может быть сформирован, не выбрана булка :(');\n      return;\n    }\n    if (user) {\n      setOrderCompleted(true);\n    } else {\n      history.push({ pathname: '/login', state: { from: location } });\n    }\n  };\n\n  const hideOrder = (): void => {\n    setOrderCompleted(false);\n  };\n\n  const chosenBun =\n    ingredients[0] && ingredients[0].type === EIngredientTypes.Bun ? ingredients[0] : null;\n\n  const SortableList = SortableContainer(({ items }: { items: IIngredientModel[] }) => {\n    return (\n      <div>\n        {items.map((ing, index) => (\n          <IngredientInConstructor\n            key={`${index}-${ing._id}`}\n            index={chosenBun ? index + 1 : index}\n            ingredient={ing}\n          />\n        ))}\n      </div>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }: { oldIndex: number; newIndex: number }) => {\n    dispatcher({\n      type: WRAP_INGREDIENTS_IN_CONSTRUCTOR,\n      indexesOfTransferedElement: { from: oldIndex, to: newIndex },\n    });\n  };\n\n  const chosenInnerIngredients = useMemo(() => {\n    return ingredients.filter((i) => i.type !== EIngredientTypes.Bun);\n  }, [ingredients]);\n\n  return (\n    <section onDrop={(e) => e.preventDefault()} className={styles.container} ref={dropTarget}>\n      {!chosenBun && (\n        <div\n          className={`constructor-element \n        constructor-element_pos_top \n        ${styles.fake_ingredient} \n        ${\n          draggingIngredient &&\n          draggingIngredient.type === EIngredientTypes.Bun &&\n          styles.on_drag_ready\n        }`}\n        >\n          <span className=\"constructor-element__row\">Выберите булку для Вашего бургера</span>\n        </div>\n      )}\n\n      {chosenBun && (\n        <div className=\"mt-1\">\n          <ConstructorElement\n            thumbnail={chosenBun.image_mobile}\n            text={chosenBun.name}\n            price={chosenBun.price}\n            isLocked={true}\n            type=\"top\"\n          />\n        </div>\n      )}\n\n      <div\n        className={[\n          styles.ingredients_scrollable_container,\n          chosenInnerIngredients.length > 5 ? styles.scrollbar_appeared : null,\n        ].join(' ')}\n      >\n        {!chosenInnerIngredients.length && (\n          <div\n            className={`constructor-element \n          ${styles.fake_ingredient} \n          ${\n            draggingIngredient &&\n            draggingIngredient.type !== EIngredientTypes.Bun &&\n            styles.on_drag_ready\n          }`}\n          >\n            <span className=\"constructor-element__row\">Добавьте ингредиенты</span>\n          </div>\n        )}\n        <SortableList items={chosenInnerIngredients} onSortEnd={onSortEnd} distance={1} />\n      </div>\n\n      {!chosenBun && (\n        <div\n          className={`constructor-element \n        constructor-element_pos_bottom\n        ${styles.fake_ingredient} \n        ${\n          draggingIngredient &&\n          draggingIngredient.type === EIngredientTypes.Bun &&\n          styles.on_drag_ready\n        }`}\n        >\n          <span className=\"constructor-element__row\">Выберите булку для Вашего бургера</span>\n        </div>\n      )}\n\n      {chosenBun && (\n        <div className=\"mt-1\">\n          <ConstructorElement\n            thumbnail={chosenBun.image_mobile}\n            text={chosenBun.name}\n            price={chosenBun.price}\n            isLocked={true}\n            type=\"bottom\"\n          />\n        </div>\n      )}\n\n      {finalPrice > 0 && (\n        <div className={[styles.final_price, 'mt-3 mb-1'].join(' ')}>\n          <span className=\"text text_type_digits-default mr-1\">{finalPrice}</span>\n          <CurrencyIcon type=\"primary\" />\n\n          <div className=\"ml-5\" onClick={placeOrder}>\n            <Button type=\"primary\" size=\"large\">\n              Оформить заказ\n            </Button>\n          </div>\n        </div>\n      )}\n\n      <Modal show={orderCompleted} onCloseClick={hideOrder}>\n        <OrderDetails />\n      </Modal>\n\n      {draggingIngredient && (\n        <div\n          className={`text text_type_digits-default ${styles.empty_dropzone} ${styles.drop_sign}`}\n        >\n          {!isHover ? <p>Перетаскивай дальше...</p> : <p>Бросай</p>}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default BurgerConstructor;\n","import React from 'react';\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\nimport BurgerConstructor from '../../components/burger-constructor/burger-constructor';\nimport styles from './main-page.module.css';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst MainPage: React.FC = () => {\n  return (\n    <main className={[styles.container, 'mt-4'].join(' ')}>\n      <DndProvider backend={HTML5Backend}>\n        <BurgerIngredients />\n        <BurgerConstructor />\n      </DndProvider>\n    </main>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound404: React.FC = () => {\n  return (\n    <div\n      style={{\n        paddingTop: 50,\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        flexDirection: 'column',\n      }}\n    >\n      <h3 className=\"mt-4 mb-15 text text_type_main-large\">Страница не найдена</h3>\n      <Link style={{ color: 'white' }} className=\"text text_type_main-default\" to={'/'}>\n        Перейти на главную\n      </Link>\n    </div>\n  );\n};\n\nexport default NotFound404;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  CodeFieldInitialState,\n  EmailFieldInitialState,\n  NameFieldInitialState,\n  PasswordFieldInitialState,\n} from '../../../utils/initial-states';\nimport { Reducer } from 'redux';\nimport { toast } from 'react-toastify';\nimport { TRootState } from '../../reducers';\nimport { doPasswordResetRequest, passwordResetRequest } from '../../../utils/api';\nimport { TAppDispatch } from '../../types/app-dispatch';\nimport { TLoginSliceActionsType, TLoginStateType } from './types';\n\n\nexport const initialState: TLoginStateType = {\n  email: EmailFieldInitialState,\n  password: PasswordFieldInitialState,\n  name: NameFieldInitialState,\n  verification_code: CodeFieldInitialState,\n  isDataTransfering: false,\n  isDataTransferingCompleted: false,\n  isErrorWhileDataTransfer: false,\n};\n\nexport const proceedPasswordResetRequest = () => (\n  dispatch: TAppDispatch,\n  getState: () => TRootState,\n) => {\n  const {\n    dataTransferCompletedSuccessfully,\n    isDataTransfering,\n    errorWhileDataTransfer,\n  } = loginSlice.actions;\n  const { email } = getState().login;\n\n  dispatch(isDataTransfering());\n  return passwordResetRequest(email.value)\n    .then((resp) => resp.json())\n    .then((data) => {\n      if (!data.success) {\n        throw new Error(data.error ? data.error : 'Ошибка получения данных');\n      }\n      dispatch(dataTransferCompletedSuccessfully());\n      toast.success('На указанный Вами email отправлено письмо с инструкцией');\n    })\n    .catch((err) => {\n      dispatch(errorWhileDataTransfer());\n      toast.error(err.message);\n    });\n};\n\nexport const proceedPasswordReset = () => (dispatch: TAppDispatch, getState: () => TRootState) => {\n  const {\n    dataTransferCompletedSuccessfully,\n    isDataTransfering,\n    errorWhileDataTransfer,\n  } = loginSlice.actions;\n  const { password, verification_code } = getState().login;\n\n  dispatch(isDataTransfering());\n  return doPasswordResetRequest(password.value, verification_code.value)\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      if (!data.success) {\n        throw new Error(data.message ? data.message : 'Ошибка получения данных');\n      }\n      dispatch(dataTransferCompletedSuccessfully());\n      toast.success('Пароль успешно изменен');\n    })\n    .catch((err) => {\n      dispatch(errorWhileDataTransfer());\n      toast.error(err.message);\n    });\n};\n\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    changeEmailFieldValue(state: TLoginStateType, action: PayloadAction<string>): void {\n      state.email.value = action.payload;\n      state.email.isError = false;\n    },\n    changePaswordFieldValue(state: TLoginStateType, action: PayloadAction<string>): void {\n      state.password.value = action.payload;\n      state.password.isError = false;\n    },\n    changeNameFieldValue(state: TLoginStateType, action: PayloadAction<string>): void {\n      state.name.value = action.payload;\n      state.name.isError = false;\n    },\n    changeCodeFieldValue(state: TLoginStateType, action: PayloadAction<string>): void {\n      state.verification_code.value = action.payload;\n      state.verification_code.isError = false;\n    },\n    changeEmailFieldError(state: TLoginStateType, action: PayloadAction<string>): void {\n      state.email.errorText = action.payload;\n      state.email.isError = true;\n    },\n    changePaswordFieldError(state: TLoginStateType, action: PayloadAction<string>): void {\n      state.password.errorText = action.payload;\n      state.password.isError = true;\n    },\n    changeNameFieldError(state: TLoginStateType, action: PayloadAction<string>): void {\n      state.name.errorText = action.payload;\n      state.name.isError = true;\n    },\n    changeCodeFieldError(state: TLoginStateType, action: PayloadAction<string>): void {\n      state.verification_code.errorText = action.payload;\n      state.verification_code.isError = true;\n    },\n    changePaswordFieldIcon(state: TLoginStateType): void {\n      if (state.password.type === 'password') {\n        state.password.type = 'text';\n        state.password.icon = 'HideIcon';\n      } else {\n        state.password.type = 'password';\n        state.password.icon = 'ShowIcon';\n      }\n    },\n    dataTransferCompletedSuccessfully(state: TLoginStateType): void {\n      state.isDataTransfering = false;\n      state.isErrorWhileDataTransfer = false;\n      state.isDataTransferingCompleted = true;\n    },\n    switchOffDataTransferStatus(state: TLoginStateType): void {\n      state.isDataTransferingCompleted = false;\n    },\n    isDataTransfering(state: TLoginStateType): void {\n      state.isDataTransfering = true;\n      state.isErrorWhileDataTransfer = false;\n      state.isDataTransferingCompleted = false;\n    },\n    errorWhileDataTransfer(state: TLoginStateType): void {\n      state.isDataTransfering = false;\n      state.isErrorWhileDataTransfer = true;\n      state.isDataTransferingCompleted = true;\n    },\n  },\n});\n\nexport const {\n  changeEmailFieldValue,\n  changePaswordFieldValue,\n  changePaswordFieldIcon,\n  isDataTransfering,\n  errorWhileDataTransfer,\n  changeEmailFieldError,\n  changePaswordFieldError,\n  changeNameFieldValue,\n  changeCodeFieldValue,\n  changeNameFieldError,\n  changeCodeFieldError,\n  switchOffDataTransferStatus,\n} = loginSlice.actions;\n\nexport const loginSliceReducer = loginSlice.reducer as Reducer<\n  TLoginStateType,\n  TLoginSliceActionsType\n  >;","import { IInputFieldStateType } from '../models/input-field-state-type';\n\nexport const EmailFieldInitialState: IInputFieldStateType = {\n  type: 'email',\n  value: '',\n  name: 'email',\n  placeholder: 'E-mail',\n  isError: false,\n};\nexport const PasswordFieldInitialState: IInputFieldStateType = {\n  type: 'password',\n  value: '',\n  name: 'password',\n  placeholder: 'Пароль',\n  isError: false,\n  icon: 'ShowIcon',\n};\nexport const NameFieldInitialState: IInputFieldStateType = {\n  type: 'text',\n  value: '',\n  name: 'name',\n  placeholder: 'Имя',\n  isError: false,\n};\n\nexport const CodeFieldInitialState: IInputFieldStateType = {\n  type: 'text',\n  value: '',\n  name: 'code',\n  placeholder: 'Введите код из письма',\n  isError: false,\n};\n","import { IUser } from '../../../models/user';\nimport { Reducer } from 'redux';\nimport { TRootState } from '../../reducers';\nimport { toast } from 'react-toastify';\nimport { changeEmailFieldValue, changeNameFieldValue, loginSlice } from '../login/login';\nimport {\n  getUserRequest,\n  loginRequest,\n  logoutRequest,\n  registerRequest,\n  updateUserRequest,\n} from '../../../utils/api';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  deleteCookie,\n  getCookie,\n  getTokenFromPayload,\n  removeFromLocalStorage,\n  saveToLocalStorage,\n  setCookie,\n} from '../../../utils/utils';\nimport { SliceActions } from '../../types/slice-actions-type';\nimport { TAppDispatch } from '../../types/app-dispatch';\nimport { TAuthStateType } from './types';\n\n\nexport const initialState: TAuthStateType = {\n  user: null,\n  isUserFetching: false,\n};\n\nexport const registerUser = (user: IUser) => (dispatch: TAppDispatch) => {\n  const {\n    dataTransferCompletedSuccessfully,\n    isDataTransfering,\n    errorWhileDataTransfer,\n  } = loginSlice.actions;\n\n  const { registerCompleted } = authSlice.actions;\n\n  dispatch(isDataTransfering());\n  return registerRequest(user)\n    .then((resp) => resp.json())\n    .then((data) => {\n      if (!data.success) {\n        throw new Error(data.message ? data.message : 'Ошибка получения данных');\n      }\n      dispatch(dataTransferCompletedSuccessfully());\n      dispatch(registerCompleted(data));\n      toast.success('Регистрация прошла успешно');\n    })\n    .catch((err) => {\n      dispatch(errorWhileDataTransfer());\n      toast.error(err.message);\n    });\n};\n\nexport const loginUser = (user: IUser, cb: CallableFunction) => (dispatch: TAppDispatch) => {\n  const {\n    dataTransferCompletedSuccessfully,\n    isDataTransfering,\n    errorWhileDataTransfer,\n  } = loginSlice.actions;\n\n  const { loginSuccessfullyCompleted } = authSlice.actions;\n\n  dispatch(isDataTransfering());\n  return loginRequest(user)\n    .then((resp) => resp.json())\n    .then((data) => {\n      if (!data.success) {\n        throw new Error(data.message ? data.message : 'Ошибка получения данных');\n      }\n      dispatch(dataTransferCompletedSuccessfully());\n      dispatch(loginSuccessfullyCompleted(data));\n      cb();\n    })\n    .catch((err) => {\n      dispatch(errorWhileDataTransfer());\n      toast.error(err.message);\n    });\n};\n\nexport const updateUser = (user: IUser) => (dispatch: TAppDispatch) => {\n  const {\n    dataTransferCompletedSuccessfully,\n    isDataTransfering,\n    errorWhileDataTransfer,\n  } = loginSlice.actions;\n\n  const { userUpdateSuccessfullyCompleted } = authSlice.actions;\n\n  dispatch(isDataTransfering());\n  return updateUserRequest(user)\n    .then((data) => {\n      if (!data.success) {\n        throw new Error(data.message ? data.message : 'Ошибка получения данных');\n      }\n      dispatch(dataTransferCompletedSuccessfully());\n      dispatch(userUpdateSuccessfullyCompleted(data));\n      toast.success('Данные обновлены');\n    })\n    .catch((err) => {\n      dispatch(errorWhileDataTransfer());\n      toast.error(err.message);\n    });\n};\n\nexport const logoutUser = () => (dispatch: TAppDispatch) => {\n  const {\n    dataTransferCompletedSuccessfully,\n    isDataTransfering,\n    errorWhileDataTransfer,\n  } = loginSlice.actions;\n\n  const { loggedOut } = authSlice.actions;\n\n  dispatch(isDataTransfering());\n  return logoutRequest()\n    .then((resp) => resp.json())\n    .then((data) => {\n      if (!data.success) {\n        throw new Error(data.message ? data.message : 'Ошибка получения данных');\n      }\n      dispatch(dataTransferCompletedSuccessfully());\n      dispatch(loggedOut());\n    })\n    .catch((err) => {\n      dispatch(errorWhileDataTransfer());\n      toast.error(err.message);\n    });\n};\n\nexport const getUser = () => async (dispatch: TAppDispatch, getState: () => TRootState) => {\n  const { dataTransferCompletedSuccessfully, isDataTransfering } = loginSlice.actions;\n\n  const { userFetched, userStartFetching } = authSlice.actions;\n  const { user, isUserFetching } = getState().auth;\n\n  if (user || (!user && !getCookie('accessToken')))\n    return new Promise<void>((resolve, reject) => {\n      resolve();\n    });\n\n  if (isUserFetching) {\n    return;\n  }\n  dispatch(userStartFetching());\n  dispatch(isDataTransfering());\n  return getUserRequest().then((data) => {\n    dispatch(dataTransferCompletedSuccessfully());\n    dispatch(changeEmailFieldValue(data.user.email));\n    dispatch(changeNameFieldValue(data.user.name));\n    dispatch(userFetched(data));\n  });\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    registerCompleted(state: TAuthStateType, action: PayloadAction<TAuthStateType>): void {\n      state.user = action.payload.user;\n      setCookie('accessToken', getTokenFromPayload(action.payload.accessToken));\n      saveToLocalStorage('refreshToken', action.payload.refreshToken);\n    },\n    loginSuccessfullyCompleted(state: TAuthStateType, action: PayloadAction<TAuthStateType>): void  {\n      state.user = action.payload.user;\n      setCookie('accessToken', getTokenFromPayload(action.payload.accessToken));\n      saveToLocalStorage('refreshToken', action.payload.refreshToken);\n    },\n    userUpdateSuccessfullyCompleted(state: TAuthStateType, action: PayloadAction<TAuthStateType>): void  {\n      state.user = action.payload.user;\n    },\n    loggedOut(state: TAuthStateType): void  {\n      state.user = null;\n      deleteCookie('accessToken');\n      removeFromLocalStorage('refreshToken');\n    },\n    tokenRefreshed(state: TAuthStateType, action: PayloadAction<TAuthStateType>): void  {\n      setCookie('accessToken', getTokenFromPayload(action.payload.accessToken));\n      saveToLocalStorage('refreshToken', action.payload.refreshToken);\n    },\n    userFetched(state: TAuthStateType, action: PayloadAction<TAuthStateType>): void {\n      state.user = action.payload.user;\n      state.isUserFetching = false;\n    },\n    userStartFetching(state: TAuthStateType): void  {\n      state.isUserFetching = true;\n    },\n    userCompletedFetchingWithError(state: TAuthStateType): void  {\n      state.isUserFetching = false;\n    },\n  },\n});\n\nexport type TAuthSliceActionsType = SliceActions<typeof authSlice.actions>;\nexport const authSliceReducer = authSlice.reducer as Reducer<\n  TAuthStateType,\n  TAuthSliceActionsType\n  >;\n","import React, { ChangeEvent, FormEvent } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport styles from './login.module.css';\nimport { Button, Input, Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport validator from 'validator';\nimport { TRootState } from '../../services/reducers';\nimport {\n  changeEmailFieldError,\n  changeEmailFieldValue,\n  changePaswordFieldError,\n  changePaswordFieldIcon,\n  changePaswordFieldValue,\n} from '../../services/slices/login/login';\nimport { loginUser } from '../../services/slices/auth/auth';\nimport { IUser } from '../../models/user';\nimport { TLocationState } from '../../models/location-state';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst LoginPage: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const dispatcher = useDispatch();\n  const { email, password, isErrorWhileDataTransfer, isDataTransfering } = useSelector(\n    (state: TRootState) => state.login,\n  );\n\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changeEmailFieldValue(e.target.value));\n  };\n  const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changePaswordFieldValue(e.target.value));\n  };\n  const passwordIconClick = () => {\n    dispatcher(changePaswordFieldIcon());\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!validator.isEmail(email.value)) {\n      dispatcher(changeEmailFieldError('Ошибка в адресе почты'));\n    }\n    if (validator.isEmpty(email.value)) {\n      dispatcher(changeEmailFieldError('Поле обязательно к заполнению'));\n    }\n    if (validator.isEmpty(password.value)) {\n      dispatcher(changePaswordFieldError('Поле обязательно к заполнению'));\n    }\n\n    if (\n      !validator.isEmail(email.value) ||\n      validator.isEmpty(email.value) ||\n      validator.isEmpty(password.value)\n    ) {\n      return;\n    }\n    const user: IUser = {\n      email: email.value,\n      password: password.value,\n    };\n    const customLocation = location.state as TLocationState;\n    dispatcher(\n      loginUser(user, () => {\n        history.replace(\n          customLocation && customLocation.from ? customLocation.from : { pathname: '/' },\n        );\n      }),\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <Logo />\n      <p className=\"text text_type_main-medium mt-20\">Вход</p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <Input\n            type={email.type}\n            placeholder={email.placeholder}\n            onChange={onChangeEmail}\n            value={email.value}\n            name={email.name}\n            error={email.isError}\n            errorText={email.errorText}\n            size={'default'}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <Input\n            type={password.type}\n            placeholder={password.placeholder}\n            onChange={onChangePassword}\n            value={password.value}\n            name={password.name}\n            error={password.isError}\n            errorText={password.errorText}\n            size={'default'}\n            icon={password.icon}\n            onIconClick={passwordIconClick}\n          />\n        </div>\n        <Button type=\"primary\" size=\"large\">\n          {!isDataTransfering ? 'Войти' : 'Данные проверяются'}\n        </Button>\n      </form>\n\n      {isErrorWhileDataTransfer && (\n        <p className=\"text text_type_main-default\">При получении данных произошла ошибка</p>\n      )}\n      <p className=\"text text_type_main-default text_color_inactive mt-20\">\n        Вы - новый пользователь? <Link to={'/register'}>Зарегистрироваться</Link>\n      </p>\n      <p className=\"text text_type_main-default text_color_inactive\">\n        Забыли пароль? <Link to={'/forgot-password'}>Восстановить пароль</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { ChangeEvent, FormEvent, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styles from '../login/login.module.css';\nimport { Button, Input, Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport validator from 'validator';\nimport { TRootState } from '../../services/reducers';\nimport {\n  changeEmailFieldError,\n  changeEmailFieldValue,\n  changeNameFieldError,\n  changeNameFieldValue,\n  changePaswordFieldError,\n  changePaswordFieldIcon,\n  changePaswordFieldValue,\n  switchOffDataTransferStatus,\n} from '../../services/slices/login/login';\nimport { IUser } from '../../models/user';\nimport { registerUser } from '../../services/slices/auth/auth';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst RegisterPage: React.FC = () => {\n  const {\n    email,\n    password,\n    name,\n    isErrorWhileDataTransfer,\n    isDataTransfering,\n    isDataTransferingCompleted,\n  } = useSelector((state: TRootState) => state.login);\n\n  const dispatcher = useDispatch();\n  const history = useHistory();\n\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changeEmailFieldValue(e.target.value));\n  };\n  const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changePaswordFieldValue(e.target.value));\n  };\n\n  const passwordIconClick = () => {\n    dispatcher(changePaswordFieldIcon());\n  };\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changeNameFieldValue(e.target.value));\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!validator.isEmail(email.value)) {\n      dispatcher(changeEmailFieldError('Ошибка в адресе почты'));\n    }\n    if (validator.isEmpty(email.value)) {\n      dispatcher(changeEmailFieldError('Поле обязательно к заполнению'));\n    }\n    if (validator.isEmpty(password.value)) {\n      dispatcher(changePaswordFieldError('Поле обязательно к заполнению'));\n    }\n    if (validator.isEmpty(name.value)) {\n      dispatcher(changeNameFieldError('Поле обязательно к заполнению'));\n    }\n\n    if (\n      !validator.isEmail(email.value) ||\n      validator.isEmpty(email.value) ||\n      validator.isEmpty(password.value) ||\n      validator.isEmpty(name.value)\n    ) {\n      return;\n    }\n    const user: IUser = {\n      email: email.value,\n      password: password.value,\n      name: name.value,\n    };\n    dispatcher(registerUser(user));\n  };\n\n  useEffect(() => {\n    if (isDataTransferingCompleted) {\n      history.replace('/login');\n    }\n  }, [isDataTransferingCompleted, history]);\n\n  useEffect(() => {\n    dispatcher(switchOffDataTransferStatus());\n  }, [dispatcher]);\n\n  return (\n    <div className={styles.container}>\n      <Logo />\n      <p className=\"text text_type_main-medium mt-20\">Регистрация</p>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type={name.type}\n          placeholder={name.placeholder}\n          onChange={onChangeName}\n          value={name.value}\n          name={name.name}\n          error={name.isError}\n          errorText={name.errorText}\n          size={'default'}\n        />\n        <Input\n          type={email.type}\n          placeholder={email.placeholder}\n          onChange={onChangeEmail}\n          value={email.value}\n          name={email.name}\n          error={email.isError}\n          errorText={email.errorText}\n          size={'default'}\n        />\n        <Input\n          type={password.type}\n          placeholder={password.placeholder}\n          onChange={onChangePassword}\n          value={password.value}\n          name={password.name}\n          error={password.isError}\n          errorText={password.errorText}\n          size={'default'}\n          icon={password.icon}\n          onIconClick={passwordIconClick}\n        />\n        <Button type=\"primary\" size=\"large\">\n          {!isDataTransfering ? 'Зарегистрироваться' : 'Данные отправляются'}\n        </Button>\n      </form>\n\n      {isErrorWhileDataTransfer && (\n        <p className=\"text text_type_main-default\">При отправке данных произошла ошибка</p>\n      )}\n      <p className=\"text text_type_main-default text_color_inactive mt-20\">\n        Уже зарегистрированы? <Link to={'/login'}>Войти</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import React, { ChangeEvent, FormEvent, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport styles from '../login/login.module.css';\n\nimport validator from 'validator';\nimport { TRootState } from '../../services/reducers';\nimport {\n  changeEmailFieldError,\n  changeEmailFieldValue,\n  proceedPasswordResetRequest,\n  switchOffDataTransferStatus,\n} from '../../services/slices/login/login';\nimport { Button, Input, Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst ForgotPasswordPage: React.FC = () => {\n  const {\n    email,\n    isErrorWhileDataTransfer,\n    isDataTransfering,\n    isDataTransferingCompleted,\n  } = useSelector((state: TRootState) => state.login);\n  const dispatcher = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changeEmailFieldValue(e.target.value));\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!validator.isEmail(email.value)) {\n      dispatcher(changeEmailFieldError('Ошибка в адресе почты'));\n    }\n    if (validator.isEmpty(email.value)) {\n      dispatcher(changeEmailFieldError('Поле обязательно к заполнению'));\n    }\n\n    if (!validator.isEmail(email.value) || validator.isEmpty(email.value)) {\n      return;\n    }\n\n    dispatcher(proceedPasswordResetRequest());\n  };\n\n  useEffect(() => {\n    if (isDataTransferingCompleted) {\n      dispatcher(switchOffDataTransferStatus());\n      history.replace({ pathname: '/reset-password', state: { from: location } });\n    }\n  }, [isDataTransferingCompleted, history, location, dispatcher]);\n\n  return (\n    <div className={styles.container}>\n      <Logo />\n      <p className=\"text text_type_main-medium mt-20\">Восстановление пароля</p>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type={email.type}\n          placeholder={email.placeholder}\n          onChange={onChangeEmail}\n          value={email.value}\n          name={email.name}\n          error={email.isError}\n          errorText={email.errorText}\n          size={'default'}\n        />\n        <Button type=\"primary\" size=\"large\">\n          {!isDataTransfering ? 'Восстановить' : 'Данные отправляются'}\n        </Button>\n      </form>\n      {isErrorWhileDataTransfer && (\n        <p className=\"text text_type_main-default\">При отправке данных произошла ошибка</p>\n      )}\n      <p className=\"text text_type_main-default text_color_inactive mt-20\">\n        Вспомнили пароль? <Link to={'/login'}>Войти</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default ForgotPasswordPage;\n","import React, { ChangeEvent, FormEvent, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport styles from '../login/login.module.css';\nimport { Button, Input, Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport validator from 'validator';\nimport { TRootState } from '../../services/reducers';\nimport {\n  changeCodeFieldError,\n  changeCodeFieldValue,\n  changePaswordFieldError,\n  changePaswordFieldIcon,\n  changePaswordFieldValue,\n  proceedPasswordReset,\n} from '../../services/slices/login/login';\nimport { TLocationState } from '../../models/location-state';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst ResetPasswordPage: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const { from } = location.state ? (location.state as TLocationState) : { from: null };\n    if (from?.pathname !== '/forgot-password') {\n      history.replace({ pathname: '/forgot-password' });\n    }\n  }, [history, location.state]);\n\n  const {\n    password,\n    verification_code,\n    isErrorWhileDataTransfer,\n    isDataTransfering,\n    isDataTransferingCompleted,\n  } = useSelector((state: TRootState) => state.login);\n  const dispatcher = useDispatch();\n\n  const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changePaswordFieldValue(e.target.value));\n  };\n\n  const passwordIconClick = () => {\n    dispatcher(changePaswordFieldIcon());\n  };\n\n  const onChangeCode = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changeCodeFieldValue(e.target.value));\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (validator.isEmpty(password.value)) {\n      dispatcher(changePaswordFieldError('Поле обязательно к заполнению'));\n    }\n    if (validator.isEmpty(verification_code.value)) {\n      dispatcher(changeCodeFieldError('Поле обязательно к заполнению'));\n    }\n\n    if (validator.isEmpty(password.value) || validator.isEmpty(verification_code.value)) {\n      return;\n    }\n\n    dispatcher(proceedPasswordReset());\n  };\n\n  useEffect(() => {\n    if (isDataTransferingCompleted) {\n      history.replace('/login');\n    }\n  }, [isDataTransferingCompleted, history]);\n\n  return (\n    <div className={styles.container}>\n      <Logo />\n      <p className=\"text text_type_main-medium mt-20\">Восстановление пароля</p>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type={password.type}\n          placeholder={password.placeholder}\n          onChange={onChangePassword}\n          value={password.value}\n          name={password.name}\n          error={password.isError}\n          errorText={password.errorText}\n          size={'default'}\n          icon={password.icon}\n          onIconClick={passwordIconClick}\n        />\n        <Input\n          type={verification_code.type}\n          placeholder={verification_code.placeholder}\n          onChange={onChangeCode}\n          value={verification_code.value}\n          name={verification_code.name}\n          error={verification_code.isError}\n          errorText={verification_code.errorText}\n          size={'default'}\n        />\n        <Button type=\"primary\" size=\"large\">\n          {!isDataTransfering ? 'Сохранить' : 'Данные отправляются'}\n        </Button>\n      </form>\n\n      {isErrorWhileDataTransfer && (\n        <p className=\"text text_type_main-default\">При отправке данных произошла ошибка</p>\n      )}\n      <p className=\"text text_type_main-default text_color_inactive mt-20\">\n        Вспомнили пароль? <Link to={'/login'}>Войти</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default ResetPasswordPage;\n","import React from 'react';\nimport { IOrder } from '../../models/order';\n\nexport const OrderStatusTitle = ({ order }: { order: IOrder }) => {\n  return order.status === 'done' ? (\n    <p className=\"text text_type_main-medium text_success_color mt-1\" style={{ fontSize: 14 }}>\n      Выполнен\n    </p>\n  ) : order.status === 'created' ? (\n    <p className=\"text text_type_main-medium  mt-1\" style={{ fontSize: 14 }}>\n      Создан\n    </p>\n  ) : (\n    <p className=\"text text_type_main-medium text_danger_color mt-1\" style={{ fontSize: 14 }}>\n      Готовится\n    </p>\n  );\n};\n\nexport default OrderStatusTitle;\n","import React, { useMemo } from 'react';\nimport { IOrder } from '../../models/order';\nimport styles from './order-in-list.module.css';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport OrderStatusTitle from '../order-status-title/order-status-title';\n\nconst OrderInList = ({ order }: { order: IOrder }) => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const totalPrice = useMemo(() => {\n    return order.ingredients.map((ing) => (ing ? ing.price : 0)).reduce((a, b) => a + b, 0);\n  }, [order.ingredients]);\n\n  const MAX_ELEMENTS_AMOUNT = 6;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={() =>\n        history.push({ pathname: `${match.url}/${order.number}`, state: { from: location } })\n      }\n    >\n      <div className={styles.order_number_date}>\n        <p className=\"text text_type_digits-default\">#{order.number}</p>\n        <p className=\"text text_type_main-default text_color_inactive\">{order.createdAt} i-GMT+3</p>\n      </div>\n      <p className=\"text text_type_main-medium\">{order.name}</p>\n\n      <OrderStatusTitle order={order} />\n\n      <div className={styles.ingredient_and_price_container}>\n        <div className={styles.ingredient_container}>\n          {order.ingredients.map((ingredient, index) =>\n            index < MAX_ELEMENTS_AMOUNT ? (\n              <div key={index} className={styles.ingredient_image}>\n                <img src={ingredient?.image_mobile} alt={ingredient?.name} />\n                {order.ingredients.length - MAX_ELEMENTS_AMOUNT > 0 && index === 0 ? (\n                  <p\n                    style={{ position: 'absolute', top: 17, left: 15 }}\n                    className=\"text text_type_digits-default\"\n                  >\n                    +{order.ingredients.length - MAX_ELEMENTS_AMOUNT}\n                  </p>\n                ) : null}\n              </div>\n            ) : null,\n          )}\n        </div>\n        <div className={styles.price}>\n          <span className=\"text text_type_digits-default pr-3\">{totalPrice}</span>{' '}\n          <CurrencyIcon type=\"primary\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderInList;\n","import React from 'react';\nimport { IOrder } from '../../models/order';\nimport styles from './orders-list.module.css';\nimport OrderInList from '../order-in-list/order-in-list';\n\nconst OrdersList = ({ orders }: { orders: IOrder[] }) => {\n  return (\n    <div className={styles.container}>\n      {orders.map((order, index) => (\n        <OrderInList key={index} order={order} />\n      ))}\n    </div>\n  );\n};\n\nexport default OrdersList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { TRootState } from '../../services/reducers';\nimport OrdersList from '../orders-list/orders-list';\nimport styles from './feed-list.module.css';\n\nconst FeedList: React.FC = () => {\n  const { orders, isFetchingFeed, isErrorWhileFetchingFeed } = useSelector(\n    (state: TRootState) => state.feed,\n  );\n\n  return (\n    <div className={styles.container}>\n      <p className=\"text text_type_main-large mb-10 mt-15\">Лента заказов</p>\n      {isFetchingFeed ? <div>Получение данных...</div> : <OrdersList orders={orders} />}\n\n      {isErrorWhileFetchingFeed && <div>Ошибка при загрузке заказов</div>}\n    </div>\n  );\n};\n\nexport default FeedList;\n","import React, { useMemo } from 'react';\nimport styles from './feed-summary.module.css';\nimport { useSelector } from 'react-redux';\nimport { TRootState } from '../../services/reducers';\n\nexport const FeedSummary: React.FC = () => {\n  const { total, totalToday, orders } = useSelector((state: TRootState) => state.feed);\n\n  const ordersReady = useMemo(() => {\n    return orders.filter((order) => order.status === 'done');\n  }, [orders]);\n\n  const ordersNotReady = useMemo(() => {\n    return orders.filter((order) => order.status !== 'done');\n  }, [orders]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.orders_numbers}>\n        <div>\n          <p className=\"text text_type_main-medium mb-6\">Готовы:</p>\n          <div className={[styles.orders_numbers_column, styles.orders_ready].join(' ')}>\n            {ordersReady.map((order) => (\n              <p key={order.number} className=\"text text_type_digits-default mb-3\">\n                {order.number}\n              </p>\n            ))}\n          </div>\n        </div>\n        <div>\n          <p className=\"text text_type_main-medium mb-6\">В работе:</p>\n          <div className={styles.orders_numbers_column}>\n            {ordersNotReady.map((order) => (\n              <p key={order.number} className=\"text text_type_digits-default mb-3\">\n                {order.number}\n              </p>\n            ))}\n          </div>\n        </div>\n      </div>\n      <p className=\"text text_type_main-medium mb-2 mt-10\">Выполнено за все время:</p>\n      <p className=\"text text_type_digits-large glow_text\">{total}</p>\n      <p className=\"text text_type_main-medium mb-2 mt-10\">Выполнено за сегодня:</p>\n      <p className=\"text text_type_digits-large glow_text\">{totalToday}</p>\n    </div>\n  );\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { Reducer } from 'redux';\nimport { IOrder } from '../../../models/order';\nimport { TRootState } from '../../reducers';\nimport { TAppDispatch } from '../../types/app-dispatch';\nimport { TFeedFetchedType, TFeedSliceActionsType, TFeedStateType } from './types';\n\nexport const initialState: TFeedStateType = {\n  orders: [],\n  isFetchingFeed: false,\n  isErrorWhileFetchingFeed: false,\n  order: undefined,\n  isFetchingOrder: false,\n  isErrorWhileFetchingOrder: false,\n  total: 0,\n  totalToday: 0,\n};\n\nexport const getFeed = () => (dispatch: TAppDispatch) => {\n  const { feedSocketInit } = feedSlice.actions;\n  dispatch(feedSocketInit());\n};\n\nexport const getOrderFromFeed = (id: string) => (\n  dispatch: TAppDispatch,\n  getState: () => TRootState,\n) => {\n  const { orderFetched, orderFetchError, orderIsFetching } = feedSlice.actions;\n  const feedOrders = getState().feed.orders as IOrder[];\n  if (!feedOrders.length) {\n    return;\n  }\n  dispatch(orderIsFetching());\n  const order = feedOrders.find((fo) => fo.number === id);\n  if (!order) {\n    dispatch(orderFetchError());\n    toast.error('Заказ не найден среди всех заказов');\n  } else {\n    dispatch(orderFetched(order));\n  }\n};\n\nexport const feedSlice = createSlice({\n  name: 'feed',\n  initialState,\n  reducers: {\n    feedFetched(state: TFeedStateType, action: PayloadAction<TFeedFetchedType>) {\n      state.isFetchingFeed = false;\n      state.isErrorWhileFetchingFeed = false;\n      state.orders = action.payload.orders;\n      state.total = action.payload.total;\n      state.totalToday = action.payload.totalToday;\n    },\n    feedSocketInit(state: TFeedStateType) {\n      state.isFetchingFeed = true;\n      state.isErrorWhileFetchingFeed = false;\n    },\n    feedSocketClose(state: TFeedStateType) {\n      state.isFetchingFeed = false;\n      state.isErrorWhileFetchingFeed = false;\n      state.orders = [];\n      state.total = 0;\n      state.totalToday = 0;\n    },\n    myFeedSocketInit(state: TFeedStateType) {\n      state.isFetchingFeed = true;\n      state.isErrorWhileFetchingFeed = false;\n    },\n    feedFetchError(state: TFeedStateType) {\n      state.isFetchingFeed = false;\n      state.isErrorWhileFetchingFeed = true;\n      state.orders = [];\n      state.total = 0;\n      state.totalToday = 0;\n    },\n    orderFetched(state: TFeedStateType, action: PayloadAction<IOrder>) {\n      state.isFetchingOrder = false;\n      state.isErrorWhileFetchingOrder = false;\n      state.order = action.payload;\n    },\n    orderIsFetching(state: TFeedStateType) {\n      state.isFetchingOrder = true;\n      state.isErrorWhileFetchingOrder = false;\n    },\n    orderFetchError(state: TFeedStateType) {\n      state.isFetchingOrder = false;\n      state.isErrorWhileFetchingOrder = true;\n      state.order = undefined;\n    },\n  },\n});\n\nexport const { feedSocketInit, myFeedSocketInit, feedFetched, feedSocketClose } = feedSlice.actions;\n\nexport const feedSliceReducer = feedSlice.reducer as Reducer<\n  TFeedStateType,\n  TFeedSliceActionsType\n  >;","import React, { useEffect } from 'react';\nimport FeedList from '../../components/feed-list/feed-list';\nimport { FeedSummary } from '../../components/feed-summary/feed-summary';\nimport styles from './feed.module.css';\nimport { feedSocketClose, feedSocketInit } from '../../services/slices/feed/feed';\nimport { TRootState } from '../../services/reducers';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nexport const Feed: React.FC = () => {\n  const dispatch = useDispatch();\n  const { ingredients } = useSelector((state: TRootState) => state.ingredients);\n\n  useEffect(() => {\n    if (ingredients.length) {\n      dispatch(feedSocketInit());\n    }\n    return () => {\n      dispatch(feedSocketClose());\n    };\n  }, [dispatch, ingredients]);\n\n  return (\n    <div className={styles.container}>\n      <FeedList />\n      <FeedSummary />\n    </div>\n  );\n};\n","import React from 'react';\nimport { IIngredientWithAmount } from '../../models/ingredient-model';\nimport styles from './ingredient-with-amount-for-feed.module.css';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nconst IngredientWithAmountForFeed = ({\n  ingredientWithAmount,\n}: {\n  ingredientWithAmount: IIngredientWithAmount;\n}) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.image_name}>\n        <div className={styles.ingredient_image}>\n          <img\n            src={ingredientWithAmount.ingredient.image_mobile}\n            alt={ingredientWithAmount.ingredient.name}\n          />\n        </div>\n        <p className=\"text text_type_main-default ml-5\">{ingredientWithAmount.ingredient.name}</p>\n      </div>\n      <div className={styles.amount_price}>\n        <p className=\"text text_type_digits-default\">{ingredientWithAmount.amount}</p>\n        <p className=\"text text_type_main-default ml-2 mr-2\">x</p>\n        <p className=\"text text_type_digits-default mr-3\">\n          {ingredientWithAmount.ingredient.price}\n        </p>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientWithAmountForFeed;\n","import React, { useEffect, useMemo } from 'react';\nimport { useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { feedSocketInit, getOrderFromFeed, myFeedSocketInit } from '../../services/slices/feed/feed';\nimport { TRootState } from '../../services/reducers';\nimport styles from './order-detailed-page.module.css';\nimport { IIngredientModel, IIngredientWithAmount } from '../../models/ingredient-model';\nimport IngredientWithAmountForFeed from '../../components/ingredient-with-amount-for-feed/ingredient-with-amount-for-feed';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport OrderStatusTitle from '../../components/order-status-title/order-status-title';\nimport { TLocationState } from '../../models/location-state';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst OrderDetailedPage: React.FC = () => {\n  const { order_id } = useParams<{ order_id: string }>();\n  const { order, isErrorWhileFetchingOrder } = useSelector((state: TRootState) => state.feed);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  const { from } = location.state ? (location.state as TLocationState) : { from: null };\n\n  const ingredients: IIngredientWithAmount[] = useMemo(() => {\n    const result: IIngredientWithAmount[] = [];\n\n    if (!order) return [];\n\n    const ingredients = order.ingredients;\n    ingredients.forEach((ingredient: IIngredientModel | undefined) => {\n      const index = result.findIndex((ingrWA) => ingrWA.ingredient._id === ingredient?._id);\n      if (index === -1) {\n        if (ingredient) result.push({ ingredient: ingredient, amount: 1 });\n      } else {\n        if (ingredient) result[index].amount += 1;\n      }\n    });\n    return result;\n  }, [order]);\n\n  const { orders } = useSelector((state: TRootState) => state.feed);\n\n  const allIngredients = useSelector((state: TRootState) => state.ingredients.ingredients);\n\n  useEffect(() => {\n    if (allIngredients.length && !orders.length) {\n      match.path === '/feed/:order_id' ? dispatch(feedSocketInit()) : dispatch(myFeedSocketInit());\n    }\n  }, [dispatch, allIngredients, orders, match]);\n\n  useEffect(() => {\n    if (orders.length) {\n      dispatch(getOrderFromFeed(order_id));\n    }\n  }, [dispatch, order_id, orders]);\n\n  const totalPrice = useMemo(() => {\n    return ingredients.map((ing) => ing.ingredient.price * ing.amount).reduce((a, b) => a + b, 0);\n  }, [ingredients]);\n\n  const LoaderOrError: React.FC = () =>\n    useMemo(\n      () => (\n        <div className={styles.container}>\n          {isErrorWhileFetchingOrder ? (\n            <p className=\"text text_type_main-default text_color_inactive\">\n              Ошибка получения данных\n            </p>\n          ) : (\n            <p className=\"text text_type_main-default text_color_inactive\">Получение данных...</p>\n          )}\n        </div>\n      ),\n      [],\n    );\n\n  return !order ? (\n    <LoaderOrError />\n  ) : (\n    <div className={styles.container}>\n      {from?.pathname !== '/profile/orders' && from?.pathname !== '/feed' && (\n        <p className=\"text text_type_digits-medium mb-10\">#{order?.number}</p>\n      )}\n      <div className={styles.inner}>\n        <p className=\"text text_type_main-medium mb-10 mt-10\">{order.name}</p>\n        <OrderStatusTitle order={order} />\n        <p className=\"text text_type_main-medium mt-10\">Состав:</p>\n\n        <div className={styles.ingredients_list}>\n          {ingredients.map((ingredient, index) =>\n            ingredient ? (\n              <IngredientWithAmountForFeed key={index} ingredientWithAmount={ingredient} />\n            ) : null,\n          )}\n        </div>\n\n        <div className={styles.date_price}>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {order.createdAt} i-GMT+3\n          </p>\n          <div className={styles.price}>\n            <p className=\"text text_type_digits-default mr-3\">{totalPrice}</p>\n            <CurrencyIcon type=\"primary\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderDetailedPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './profile.module.css';\nimport { logoutUser } from '../../services/slices/auth/auth';\nimport { useDispatch } from '../../utils/hooks';\n\nexport const ProfileMainPage: React.FC = ({ children }) => {\n  const dispatch = useDispatch();\n\n  const logOut = (): void => {\n    dispatch(logoutUser());\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.links}>\n        <div className=\"mb-10\">\n          <NavLink\n            to=\"/profile\"\n            exact\n            className=\"link text text_type_main-default text_color_inactive\"\n            activeClassName=\"text_color_active\"\n          >\n            Профиль\n          </NavLink>\n        </div>\n        <div className=\"mb-10\">\n          <NavLink\n            to=\"/profile/orders\"\n            className=\"link text text_type_main-default text_color_inactive\"\n            activeClassName=\"text_color_active\"\n          >\n            История заказов\n          </NavLink>\n        </div>\n        <div className=\"mb-10\">\n          <p\n            onClick={logOut}\n            className=\"link text text_type_main-default text_color_inactive cursor_pointer\"\n          >\n            Выход\n          </p>\n        </div>\n        <p className=\"text text_type_main-small text_color_inactive opacity_04\">\n          В этом разделе Вы можете <br />\n          изменить свои персональные данные\n        </p>\n      </div>\n      <div className={styles.profile_inner_container}>{children}</div>\n    </div>\n  );\n};\n","import React, { ChangeEvent, FormEvent, useCallback, useEffect } from 'react';\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport {\n  changeEmailFieldValue,\n  changeNameFieldValue,\n  changePaswordFieldValue,\n} from '../../services/slices/login/login';\nimport { TRootState } from '../../services/reducers';\nimport { updateUser } from '../../services/slices/auth/auth';\nimport styles from './profile-user-data.module.css';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nexport const ProfileUserData: React.FC = () => {\n  const { email, password, name, isDataTransfering, isErrorWhileDataTransfer } = useSelector(\n    (state: TRootState) => state.login,\n  );\n\n  const user = useSelector((state: TRootState) => state.auth.user);\n  const dispatcher = useDispatch();\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changeNameFieldValue(e.target.value));\n  };\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changeEmailFieldValue(e.target.value));\n  };\n  const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatcher(changePaswordFieldValue(e.target.value));\n  };\n\n  const cancelInput = useCallback(() => {\n    if (user) {\n      dispatcher(changeEmailFieldValue(user.email));\n      if (user.name) {\n        dispatcher(changeNameFieldValue(user.name));\n      }\n    }\n  }, [dispatcher, user]);\n\n  useEffect(() => {\n    cancelInput();\n  }, [cancelInput]);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    const user = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n    dispatcher(updateUser(user));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"input_container_full_width mb-3\">\n        <Input\n          type={'text'}\n          placeholder={'Имя'}\n          onChange={onChangeName}\n          icon={'EditIcon'}\n          value={name.value}\n          name={'name'}\n          error={false}\n          errorText={'Ошибка'}\n          size={'default'}\n        />\n      </div>\n      <div className=\"input_container_full_width mb-3\">\n        <Input\n          type={'text'}\n          placeholder={'Логин'}\n          onChange={onChangeEmail}\n          icon={'EditIcon'}\n          value={email.value}\n          name={'email'}\n          error={false}\n          errorText={'Ошибка'}\n          size={'default'}\n        />\n      </div>\n      <div className=\"input_container_full_width mb-3\">\n        <Input\n          type={'password'}\n          placeholder={'Пароль'}\n          onChange={onChangePassword}\n          icon={'EditIcon'}\n          value={password.value}\n          name={'password'}\n          error={false}\n          errorText={'Ошибка'}\n          size={'default'}\n        />\n      </div>\n      <div className={styles.cancel_submit}>\n        <div className=\"mr-5 cursor_pointer text_success_color\" onClick={cancelInput}>\n          Отмена\n        </div>\n        <Button type=\"primary\" size=\"medium\">\n          {!isDataTransfering ? 'Сохранить' : 'Данные отправляются'}\n        </Button>\n      </div>\n\n      {isErrorWhileDataTransfer && (\n        <p className=\"text text_type_main-default\">При получении данных произошла ошибка</p>\n      )}\n    </form>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { TRootState } from '../../services/reducers';\nimport OrdersList from '../../components/orders-list/orders-list';\nimport { feedSocketClose, myFeedSocketInit } from '../../services/slices/feed/feed';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst ProfileOrdersHistory: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { orders, isFetchingFeed, isErrorWhileFetchingFeed } = useSelector(\n    (state: TRootState) => state.feed,\n  );\n  const { ingredients } = useSelector((state: TRootState) => state.ingredients);\n  const { user } = useSelector((state: TRootState) => state.auth);\n\n  useEffect(() => {\n    if (ingredients.length && user) {\n      dispatch(myFeedSocketInit());\n    }\n    return () => {\n      dispatch(feedSocketClose());\n    };\n  }, [dispatch, ingredients, user]);\n\n  return (\n    <>\n      {isFetchingFeed ? <div>Получение данных...</div> : <OrdersList orders={orders} />}\n      {isErrorWhileFetchingFeed && <div>Ошибка при загрузке заказов</div>}\n    </>\n  );\n};\n\nexport default ProfileOrdersHistory;\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../services/slices/auth/auth';\nimport { Route, Redirect, useHistory, RouteProps } from 'react-router-dom';\nimport { TRootState } from '../services/reducers';\nimport { useDispatch, useSelector } from '../utils/hooks';\n\nexport const ProtectedRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\n  const { user, isUserFetching } = useSelector((state: TRootState) => state.auth);\n  const dispatch = useDispatch();\n  const [isUserLoaded, setUserLoaded] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    const init = async () => {\n      await dispatch(getUser());\n    };\n    init().then(() => setUserLoaded(true));\n  }, [dispatch, history]);\n\n  if (!isUserLoaded || isUserFetching) {\n    return null;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","import { Route, Redirect, useHistory, RouteProps } from 'react-router-dom';\nimport { TRootState } from '../services/reducers';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../services/slices/auth/auth';\nimport { useDispatch, useSelector } from '../utils/hooks';\n\nexport const OnlyUnauthRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\n  const { user, isUserFetching } = useSelector((state: TRootState) => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [isUserLoaded, setUserLoaded] = useState(false);\n\n  useEffect(() => {\n    const init = async () => {\n      await dispatch(getUser());\n    };\n    init().then(() => setUserLoaded(true));\n  }, [dispatch, history]);\n\n  if (!isUserLoaded || isUserFetching) {\n    return null;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user ? (\n          <Redirect\n            to={{\n              pathname: '/',\n            }}\n          />\n        ) : (\n          children\n        )\n      }\n    />\n  );\n};\n","export const SET_INGREDIENT_AS_PREVIEW: 'SET_INGREDIENT_AS_PREVIEW' = 'SET_INGREDIENT_AS_PREVIEW';\nexport const CLEAR_INGREDIENT_PREVIEW: 'CLEAR_INGREDIENT_PREVIEW' = 'CLEAR_INGREDIENT_PREVIEW';\n","import { IIngredientModel } from '../../../models/ingredient-model';\nimport {\n  SET_INGREDIENT_AS_PREVIEW,\n  CLEAR_INGREDIENT_PREVIEW,\n} from '../../actions/ingredient-detail';\nimport { toast } from 'react-toastify';\nimport { TRootState } from '../index';\nimport { TAppDispatch } from '../../types/app-dispatch';\nimport { TIngredientsDetailViewActions, TIngredientsDetailViewStateType } from './types';\n\n\nexport const initialState: TIngredientsDetailViewStateType = {\n  ingredient: null,\n};\n\nexport const getIngredientById = (id: string) => (\n  dispatch: TAppDispatch,\n  getState: () => TRootState,\n) => {\n  const ingredients = getState().ingredients.ingredients;\n  dispatch({ type: CLEAR_INGREDIENT_PREVIEW });\n  return new Promise<IIngredientModel>((resolve, reject) => {\n    const ingredient = ingredients.find((i) => i._id === id);\n    if (ingredient) {\n      resolve(ingredient);\n    } else {\n      reject('Ингредиент с таким ID не найден');\n    }\n  })\n    .then((data) => {\n      dispatch({ type: SET_INGREDIENT_AS_PREVIEW, ingredient: data });\n    })\n    .catch((err) => {\n      toast.error(err.message);\n    });\n};\n\nexport const ingredientsDetailedReducer = (\n  state = initialState,\n  action: TIngredientsDetailViewActions,\n): TIngredientsDetailViewStateType => {\n  switch (action.type) {\n    case SET_INGREDIENT_AS_PREVIEW: {\n      return { ...state, ingredient: action.ingredient };\n    }\n    case CLEAR_INGREDIENT_PREVIEW: {\n      return { ...state, ingredient: null };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import styles from './modal-detailed.module.css';\nimport React, { useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { TRootState } from '../../services/reducers';\nimport { getIngredientById } from '../../services/reducers/ingredient-detail/ingredient-detail';\nimport { TLocationState } from '../../models/location-state';\nimport { useDispatch, useSelector } from '../../utils/hooks';\n\nconst IngredientDetails: React.FC = () => {\n  const location = useLocation();\n  const { from } = location.state ? (location.state as TLocationState) : { from: null };\n\n  const dispatch = useDispatch();\n  const { id } = useParams<{ id: string }>();\n  const ingredient = useSelector((state: TRootState) => state.detailedIngredient.ingredient);\n  const ingredientsAll = useSelector((state: TRootState) => state.ingredients.ingredients);\n\n  useEffect(() => {\n    dispatch(getIngredientById(id));\n  }, [dispatch, id, ingredientsAll]);\n\n  return !ingredientsAll.length ? (\n    <h3>Loading...</h3>\n  ) : !ingredient ? (\n    <h3>Ингредиент не найден...</h3>\n  ) : (\n    <div className={styles.Container}>\n      <div className={styles.inner}>\n        {from?.pathname !== '/' && <h2 className=\"mt-20\">Детали ингредиента</h2>}\n        <img src={ingredient.image_large} alt={ingredient.name} />\n        <div className=\"text text_type_main-default\">{ingredient.name}</div>\n        <div className=\"text default mt-3\" style={{ textAlign: 'center', fontSize: 14 }}>\n          {ingredient.description ||\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}\n        </div>\n        <div className={[styles.NumbersContainer, 'text text_type_main-default mt-3'].join(' ')}>\n          <div>\n            Калории,ккал\n            <p className=\"text text_type_digits-default\">{ingredient.calories}</p>\n          </div>\n          <div>\n            Белки,г\n            <p className=\"text text_type_digits-default\">{ingredient.proteins}</p>\n          </div>\n          <div>\n            Жиры,г\n            <p className=\"text text_type_digits-default\">{ingredient.fat}</p>\n          </div>\n          <div>\n            Углеводы,г\n            <p className=\"text text_type_digits-default\">{ingredient.carbohydrates}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientDetails;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst ClearHistoryStateComponent: React.FC = () => {\n  const history = useHistory();\n  if (history.location && history.location.state) {\n    history.replace({ ...history.location, state: null });\n  }\n  return null;\n};\n\nexport default ClearHistoryStateComponent;\n","import React, { useEffect } from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport AppHeader from '../app-header/app-header';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getIngredients } from '../../services/slices/ingredients/ingredients';\nimport {\n  Feed,\n  ForgotPasswordPage,\n  LoginPage,\n  MainPage,\n  NotFound404,\n  RegisterPage,\n  ResetPasswordPage,\n  OrderDetailedPage,\n  ProfileMainPage,\n  ProfileUserData,\n  ProfileOrdersHistory,\n} from '../../pages';\nimport { ProtectedRoute } from '../ProtectedRoute';\nimport { OnlyUnauthRoute } from '../OnlyUnauthRoute';\nimport { TLocationState } from '../../models/location-state';\nimport Modal from '../modal-window/modal';\nimport IngredientDetails from '../../pages/ingredient-detailed/ingredient-details';\nimport ClearHistoryStateComponent from '../clear-history-state/clear-history-state';\nimport { createBrowserHistory } from 'history';\nimport { getUser } from '../../services/slices/auth/auth';\nimport { useDispatch } from '../../utils/hooks';\n\nexport const history = createBrowserHistory();\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getIngredients());\n    dispatch(getUser());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <ClearHistoryStateComponent />\n        <AppHeader />\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <MainPage />\n          </Route>\n          <Route\n            path=\"/ingredients/:id\"\n            exact={true}\n            render={({ location, history, match }) => {\n              const { from } = location.state ? (location.state as TLocationState) : { from: null };\n              if (from?.pathname === '/') {\n                return (\n                  <>\n                    <MainPage />\n                    <Modal\n                      title=\"Детали ингредиента\"\n                      show={true}\n                      onCloseClick={() => history.goBack()}\n                    >\n                      <IngredientDetails />\n                    </Modal>\n                  </>\n                );\n              }\n              return <IngredientDetails />;\n            }}\n          />\n          <OnlyUnauthRoute path=\"/login\" exact={true}>\n            <LoginPage />\n          </OnlyUnauthRoute>\n          <OnlyUnauthRoute path=\"/register\" exact={true}>\n            <RegisterPage />\n          </OnlyUnauthRoute>\n          <OnlyUnauthRoute path=\"/forgot-password\" exact={true}>\n            <ForgotPasswordPage />\n          </OnlyUnauthRoute>\n          <OnlyUnauthRoute path=\"/reset-password\" exact={true}>\n            <ResetPasswordPage />\n          </OnlyUnauthRoute>\n          <Route path=\"/feed\" exact={true}>\n            <Feed />\n          </Route>\n          <Route\n            path=\"/feed/:order_id\"\n            exact={true}\n            render={({ location, history, match }) => {\n              const { from } = location.state ? (location.state as TLocationState) : { from: null };\n              if (from?.pathname === '/feed') {\n                return (\n                  <>\n                    <Feed />\n                    <Modal\n                      title={`#${match.params.order_id}`}\n                      show={true}\n                      onCloseClick={() => history.goBack()}\n                    >\n                      <OrderDetailedPage />\n                    </Modal>\n                  </>\n                );\n              }\n              return <OrderDetailedPage />;\n            }}\n          />\n          <ProtectedRoute path=\"/profile\">\n            <ProfileMainPage>\n              <Switch>\n                <Route path=\"/profile\" exact={true}>\n                  <ProfileUserData />\n                </Route>\n                <Route path=\"/profile/orders\" exact={true}>\n                  <ProfileOrdersHistory />\n                </Route>\n                <Route\n                  path=\"/profile/orders/:order_id\"\n                  exact={true}\n                  render={({ location, history, match }) => {\n                    const { from } = location.state\n                      ? (location.state as TLocationState)\n                      : { from: null };\n                    if (from?.pathname === '/profile/orders') {\n                      return (\n                        <>\n                          <ProfileOrdersHistory />\n                          <Modal\n                            title={`#${match.params.order_id}`}\n                            show={true}\n                            onCloseClick={() => history.goBack()}\n                          >\n                            <OrderDetailedPage />\n                          </Modal>\n                        </>\n                      );\n                    }\n                    return <OrderDetailedPage />;\n                  }}\n                />\n              </Switch>\n            </ProfileMainPage>\n          </ProtectedRoute>\n          <Route>\n            <NotFound404 />\n          </Route>\n        </Switch>\n      </Router>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IIngredientModel, EIngredientTypes } from '../../../models/ingredient-model';\nimport {\n  ADD_INGREDIENT_TO_CONSTRUCTOR,\n  REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n  WRAP_INGREDIENTS_IN_CONSTRUCTOR,\n  CLEAR_CONSTRUCTOR,\n} from '../../actions/burger-constructor';\nimport { TConstructorStateType, TIngredientsReducerActionsType } from './types';\n\nexport const initialState: TConstructorStateType = {\n  ingredients: [],\n  finalPrice: 0,\n};\n\nconst calculateFinalPrice = (ingredients: IIngredientModel[]) => {\n  return ingredients.reduce((acc, ing) => {\n    return acc + ing.price;\n  }, 0);\n};\n\nexport const constructorReducer = (\n  state = initialState,\n  action: TIngredientsReducerActionsType,\n): TConstructorStateType => {\n  switch (action.type) {\n    case ADD_INGREDIENT_TO_CONSTRUCTOR: {\n      let newIngredients = [];\n      if (action.ingredient.type === EIngredientTypes.Bun) {\n        const chosenIngredients = state.ingredients.filter(\n          (ing) => ing.type !== EIngredientTypes.Bun,\n        );\n        newIngredients = [action.ingredient, ...chosenIngredients, action.ingredient];\n      } else {\n        const bun = state.ingredients.find((ing) => ing.type === EIngredientTypes.Bun);\n        const chosenIngredients = state.ingredients.filter(\n          (ing) => ing.type !== EIngredientTypes.Bun,\n        );\n        newIngredients = bun\n          ? [bun, ...chosenIngredients, action.ingredient, bun]\n          : [...chosenIngredients, action.ingredient];\n      }\n      return {\n        ...state,\n        ingredients: newIngredients,\n        finalPrice: calculateFinalPrice(newIngredients),\n      };\n    }\n    case REMOVE_INGREDIENT_FROM_CONSTRUCTOR: {\n      const newIngredients = state.ingredients.filter((ing) => ing !== action.ingredient);\n      return {\n        ...state,\n        ingredients: newIngredients,\n        finalPrice: calculateFinalPrice(newIngredients),\n      };\n    }\n\n    case CLEAR_CONSTRUCTOR: {\n      return {\n        ...state,\n        ingredients: [],\n        finalPrice: calculateFinalPrice([]),\n      };\n    }\n\n    case WRAP_INGREDIENTS_IN_CONSTRUCTOR: {\n      const newIngredients = [...state.ingredients];\n      const cutOut = newIngredients.splice(action.indexesOfTransferedElement.from, 1);\n      newIngredients.splice(action.indexesOfTransferedElement.to, 0, cutOut[0]);\n      return { ...state, ingredients: newIngredients };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { ORDER_COMPLETED, ORDER_IS_PROCESSING, ORDER_PROCESS_FAILED } from '../../actions/order';\nimport { toast } from 'react-toastify';\nimport { TOrderActions, TOrderStateType } from './types';\n\n\nexport const initialState: TOrderStateType = {\n  order: { name: '', number: '', status: 'pending', ingredients: [], createdAt: '', updatedAt: '' },\n  isFetching: false,\n  isErrorWhileFetching: false,\n};\n\nexport const orderReducer = (state = initialState, action: TOrderActions): TOrderStateType => {\n  switch (action.type) {\n    case ORDER_IS_PROCESSING: {\n      return { ...state, isFetching: true, isErrorWhileFetching: false };\n    }\n    case ORDER_COMPLETED: {\n      return { ...state, order: action.order, isFetching: false, isErrorWhileFetching: false };\n    }\n    case ORDER_PROCESS_FAILED: {\n      toast.error(action.message);\n      return { ...state, isFetching: false, isErrorWhileFetching: true };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  SET_INGREDIENT_DRAGGING,\n  CLEAR_INGREDIENT_DRAGGING,\n} from '../../actions/ingredient-dragging';\nimport { TIngredientDraggingActions, TIngredientsDraggingStateType } from './types';\n\n\nexport const initialState: TIngredientsDraggingStateType = {\n  ingredient: null,\n};\n\nexport const ingredientsDraggingReducer = (\n  state = initialState,\n  action: TIngredientDraggingActions,\n): TIngredientsDraggingStateType => {\n  switch (action.type) {\n    case SET_INGREDIENT_DRAGGING: {\n      return { ...state, ingredient: action.ingredient };\n    }\n    case CLEAR_INGREDIENT_DRAGGING: {\n      return { ...state, ingredient: null };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { constructorReducer } from './burger-constructor/burger-constructor';\nimport { orderReducer } from './order/order';\nimport { ingredientsDetailedReducer } from './ingredient-detail/ingredient-detail';\nimport { ingredientsDraggingReducer } from './ingredient-dragging/ingredient-dragging';\nimport { ingredientsSliceReducer } from '../slices/ingredients/ingredients';\nimport { loginSliceReducer } from '../slices/login/login';\nimport { feedSliceReducer } from '../slices/feed/feed';\nimport { authSliceReducer } from '../slices/auth/auth';\nimport { store } from '../store';\n\nexport const rootReducer = combineReducers({\n  ingredients: ingredientsSliceReducer,\n  burgerConstructor: constructorReducer,\n  order: orderReducer,\n  detailedIngredient: ingredientsDetailedReducer,\n  draggingIngredient: ingredientsDraggingReducer,\n  login: loginSliceReducer,\n  feed: feedSliceReducer,\n  auth: authSliceReducer,\n});\n\nexport type TRootState = ReturnType<typeof store.getState>;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { rootReducer } from './reducers';\nimport { socketMiddleware } from './middlewares/socketMiddleware';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: [socketMiddleware(), ...getDefaultMiddleware()],\n  devTools: process.env.NODE_ENV !== 'production',\n});\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport {\n  feedFetched,\n  feedSocketClose,\n  feedSocketInit,\n  myFeedSocketInit,\n} from '../slices/feed/feed';\nimport { IOrder, IOrderInSocket } from '../../models/order';\nimport { IIngredientModel } from '../../models/ingredient-model';\nimport { dateToFromNowDaily, getCookie } from '../../utils/utils';\nimport { wssFeedUrl, wssMyFeedUrl } from '../../utils/apiURLs';\n\nexport const socketMiddleware = (): Middleware => {\n  return (store: MiddlewareAPI) => {\n    let feedSocket: WebSocket | null = null;\n    let pingInterval: ReturnType<typeof setInterval>;\n\n    return (next: Dispatch) => (action: PayloadAction) => {\n      const { dispatch, getState } = store;\n      const { type } = action;\n\n      const allIngredients = getState().ingredients.ingredients as IIngredientModel[];\n\n      if (type === feedSocketInit.type && allIngredients.length) {\n        feedSocket = new WebSocket(wssFeedUrl);\n      }\n\n      if (type === myFeedSocketInit.type && allIngredients.length) {\n        const accessToken = getCookie('accessToken');\n        feedSocket = new WebSocket(`${wssMyFeedUrl}?token=${accessToken}`);\n      }\n\n      if (feedSocket) {\n        feedSocket.onmessage = (event) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n          const orders: IOrderInSocket[] = restParsedData.orders as IOrderInSocket[];\n          const serializedOrders: IOrder[] = orders.length ? orders\n            .sort((a, b) => Date.parse(b.updatedAt) - Date.parse(a.updatedAt))\n            .map((ord) => {\n              const ingredients: IIngredientModel[] = ord.ingredients\n                .map((ing) => allIngredients.find((ai) => ai._id === ing))\n                .filter((ing) => ing !== undefined) as IIngredientModel[];\n              return {\n                ...ord,\n                number: ord.number.toString(),\n                ingredients,\n                createdAt: dateToFromNowDaily(ord.createdAt),\n              };\n            }) : [];\n          dispatch(feedFetched({ ...restParsedData, orders: serializedOrders }));\n        };\n\n        feedSocket.onopen = (): void => {\n          pingInterval = setInterval(() => {\n            if (feedSocket?.readyState === 1) {\n              feedSocket?.send('ping');\n            }\n          }, 1000);\n        };\n\n        feedSocket.onclose = (): void => {\n          clearInterval(pingInterval);\n        };\n\n        if (type === feedSocketClose.type && feedSocket) {\n          feedSocket.close();\n        }\n      }\n      next(action);\n    };\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { Provider } from 'react-redux';\nimport { store } from './services/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2wyBj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients_list_container\":\"ingredient_ingredients_list_container__16mfq\",\"ingredient_container\":\"ingredient_ingredient_container__h5t4m\",\"price\":\"ingredient_price__2xF1Q\",\"ingredients_panel\":\"ingredient_ingredients_panel__1Z1he\",\"ingredients_panel_title\":\"ingredient_ingredients_panel_title__3tZNB\",\"DetailPopup\":\"ingredient_DetailPopup__EKZmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-in-list_container__2U-Uf\",\"order_number_date\":\"order-in-list_order_number_date__BhAol\",\"ingredient_image\":\"order-in-list_ingredient_image__1ph6_\",\"ingredient_container\":\"order-in-list_ingredient_container__3a530\",\"ingredient_and_price_container\":\"order-in-list_ingredient_and_price_container__oltXG\",\"price\":\"order-in-list_price__P8tmz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-detailed-page_container__wApjb\",\"inner\":\"order-detailed-page_inner__3XTbB\",\"ingredients_list\":\"order-detailed-page_ingredients_list__1pVUi\",\"date_price\":\"order-detailed-page_date_price__3PHIx\",\"price\":\"order-detailed-page_price__2OxKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed-summary_container__hagXz\",\"orders_numbers\":\"feed-summary_orders_numbers__1id4O\",\"orders_ready\":\"feed-summary_orders_ready__LsebF\",\"orders_numbers_column\":\"feed-summary_orders_numbers_column__2GLz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-with-amount-for-feed_container__3PjQy\",\"ingredient_image\":\"ingredient-with-amount-for-feed_ingredient_image__211TX\",\"image_name\":\"ingredient-with-amount-for-feed_image_name__3xuaT\",\"amount_price\":\"ingredient-with-amount-for-feed_amount_price__35ZpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__2OHmv\",\"links\":\"profile_links__ug_nu\",\"profile_inner_container\":\"profile_profile_inner_container__3aT7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"modal-detailed_Container__UezDa\",\"inner\":\"modal-detailed_inner__2R-Hz\",\"NumbersContainer\":\"modal-detailed_NumbersContainer__35-ko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalWindow\":\"modal_ModalWindow__3zPFJ\",\"slidein\":\"modal_slidein__H5vGz\",\"TitleAndClose\":\"modal_TitleAndClose__hqxBW\"};"],"sourceRoot":""}